{"version":3,"sources":["webpack:///./themes/lovata-shopaholic-sneakers/partials/form/subscribe/subscribe.js","webpack:///./node_modules/vanilla-lazyload/dist/lazyload.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/common/custom-swiper/custom-swiper.js","webpack:///./themes/lovata-shopaholic-sneakers/js/lazy-load.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/product/two-level-slider/two-level-slider.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/content/main-slider/main-slider.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/content/big-slider/big-slider.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/content/brand-slider/brand-slider.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/article/news-slider/news-slider.js"],"names":["$","constructor","this","subscribeFormSelector","subscribeInputSelector","submitBtnSelector","inValidSelector","successSelector","successVisibleSelector","preLoaderSelector","delay","handler","form","document","querySelector","addEventListener","setTimeout","checkForm","matches","input","email","value","request","data","loading","complete","res","showTooltip","dispatchEvent","Event","bubbles","statusText","getToolTip","classList","add","hideToolTip","remove","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_typeof","obj","Symbol","iterator","runningOnBrowser","window","isBot","navigator","test","userAgent","supportsIntersectionObserver","supportsClassList","createElement","defaultSettings","elements_selector","container","threshold","thresholds","data_src","data_srcset","data_sizes","data_bg","class_loading","class_loaded","class_error","load_delay","auto_unobserve","callback_enter","callback_exit","callback_reveal","callback_loaded","callback_error","callback_finish","getData","element","attribute","getAttribute","setData","attrName","setAttribute","removeAttribute","getWasProcessedData","setTimeoutData","getTimeoutData","createInstance","classObj","options","event","instance","CustomEvent","detail","err","createEvent","initCustomEvent","callbackIfSet","callback","argument","updateLoadingCount","plusMinus","_loadingCount","_elements","_settings","getSourceTags","parentTag","childTag","sourceTags","children","tagName","push","setAttributeIfValue","setImageAttributes","settings","setSourcesFunctions","IMG","parent","parentNode","forEach","sourceTag","IFRAME","VIDEO","load","setSources","elements","elementToPurge","setSourcesFunction","filter","srcDataValue","bgDataValue","style","backgroundImage","concat","setSourcesBgImage","addClass","className","eventName","removeEventListener","removeEventListeners","loadHandler","errorHandler","eventHandler","success","replace","RegExp","removeClass","addOneShotEventListeners","addEventListeners","managedTags","revealAndUnobserve","observer","_observer","revealElement","unobserve","cancelDelayLoad","timeoutId","clearTimeout","delayLoad","loadDelay","force","indexOf","setWasProcessedData","callback_set","setObserver","IntersectionObserver","entries","entry","isIntersecting","intersectionRatio","onEnter","onExit","root","rootMargin","LazyLoad","customSettings","getInstanceSettings","update","_this","querySelectorAll","purgeProcessedElements","Array","slice","observe","loadAll","destroy","_this2","_this3","optionsItem","autoInitialize","lazyLoadOptions","exports","module","undefined","__webpack_require__","doc","body","activeElement","blur","nodeName","getElementById","initEvent","childNodes","getElementsByTagName","location","hash","win","history","getComputedStyle","getPropertyValue","Image","Date","screen","Dom7","[object Object]","arr","self","selector","context","els","tempParent","html","trim","toCreate","innerHTML","match","split","nodeType","unique","uniqueArray","fn","Class","Methods","classes","j","hasClass","contains","toggleClass","toggle","attr","attrs","removeAttr","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","eventData","dom7EventData","unshift","is","parents","k","handleEvent","events","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","splice","dom7proxy","trigger","evt","cancelable","dataIndex","transitionEnd","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","closest","find","foundElements","found","removeChild","toAdd","keys","methodName","Utils","object","nextTick","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","SwiperClass","eventsListeners","priority","method","onceHandler","f7proxy","isArray","instanceParams","modules","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_transition","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","Mousewheel","lastScrollTime","isSupported","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","returnValue","eventsTarged","handleMouseEnter","handleMouseLeave","handle","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","hideOnClick","hiddenClass","isHidden","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","number","render","Controller","LinearSpline","binarySearch","maxIndex","minIndex","guess","array","i1","i3","interpolate","x2","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","keyCode","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","a11y$1","notificationClass","updateNavigation","updatePagination","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","d","__webpack_exports__","custom_swiper_CustomSwiper","Swiper","A11y","CustomSwiper","vanilla_lazyload_dist_lazyload__WEBPACK_IMPORTED_MODULE_0__","vanilla_lazyload_dist_lazyload__WEBPACK_IMPORTED_MODULE_0___default","n","lazySelector","finishSelector","initLazyLoad","myLazyLoad","node","parentElement","_common_custom_swiper_custom_swiper__WEBPACK_IMPORTED_MODULE_0__","_js_lazy_load__WEBPACK_IMPORTED_MODULE_1__","sliderAjaxWrapper","sliderContainerSelector","wrapperSelector","wrapperFlexSelector","tabBtnSelector","tabActiveRtnSelector","idSelector","changeSlider","TwoLevelSlider","769","btn","sliderTabHandler","id","$this","category_id","product/two-level-slider/two-level-slider-ajax","changeActiveTab","slideSelector","slider","HeroSlider","BigSlider","blogSlider","768","sliderAjaxWrapperSelector","article/news-slider/news-slider-ajax"],"mappings":"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","file":"/js/index.js","sourcesContent":["export default new class Subscribe {\n  constructor() {\n    this.subscribeFormSelector = 'subscribe__form';\n    this.subscribeInputSelector = 'subscribe__email';\n    this.submitBtnSelector = 'subscribe__submit';\n    this.inValidSelector = '_invalid';\n    this.successSelector = 'subscribe__success';\n    this.successVisibleSelector = 'subscribe__success_visible';\n    this.preLoaderSelector = 'subscribe__preloader';\n    this.delay = 2000;\n\n    this.handler();\n  }\n\n  handler() {\n    const form = document.querySelector(`.${this.subscribeFormSelector}`);\n\n    if (!form) return;\n\n    const submitBtn = form.querySelector(`.${this.submitBtnSelector}`);\n\n    submitBtn.addEventListener('click', () => {\n      setTimeout(() => {\n        this.checkForm(form);\n      }, 0);\n    });\n  }\n\n  checkForm(form) {\n    if (form.matches(`.${this.inValidSelector}`)) return;\n\n    const input = form.querySelector(`.${this.subscribeInputSelector}`);\n    const email = input.value;\n\n    $.request('mailSignup::onSignup', {\n      data: {\n        email,\n      },\n      loading: `.${this.preLoaderSelector}`,\n      complete: (res) => {\n        this.showTooltip(res);\n        setTimeout(() => {\n          input.value = '';\n          input.dispatchEvent(new Event('change', {\n            bubbles: true,\n          }));\n        }, this.delay);\n      },\n    });\n  }\n\n  showTooltip(res) {\n    const { statusText } = res;\n\n    if (statusText !== 'OK') return;\n\n    const successNode = this.getToolTip();\n\n    successNode.classList.add(this.successVisibleSelector);\n\n    setTimeout(() => {\n      this.hideToolTip();\n    }, this.delay);\n  }\n\n  hideToolTip() {\n    const successNode = this.getToolTip();\n\n    successNode.classList.remove(this.successVisibleSelector);\n  }\n\n  getToolTip() {\n    return document.querySelector(`.${this.successSelector}`);\n  }\n}();\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.LazyLoad = factory();\n})(this, function () {\n  'use strict';\n\n  var runningOnBrowser = typeof window !== \"undefined\";\n  var isBot = runningOnBrowser && !(\"onscroll\" in window) || typeof navigator !== \"undefined\" && /(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent);\n  var supportsIntersectionObserver = runningOnBrowser && \"IntersectionObserver\" in window;\n  var supportsClassList = runningOnBrowser && \"classList\" in document.createElement(\"p\");\n  var defaultSettings = {\n    elements_selector: \"img\",\n    container: isBot || runningOnBrowser ? document : null,\n    threshold: 300,\n    thresholds: null,\n    data_src: \"src\",\n    data_srcset: \"srcset\",\n    data_sizes: \"sizes\",\n    data_bg: \"bg\",\n    class_loading: \"loading\",\n    class_loaded: \"loaded\",\n    class_error: \"error\",\n    load_delay: 0,\n    auto_unobserve: true,\n    callback_enter: null,\n    callback_exit: null,\n    callback_reveal: null,\n    callback_loaded: null,\n    callback_error: null,\n    callback_finish: null\n  };\n\n  var getInstanceSettings = function getInstanceSettings(customSettings) {\n    return _extends({}, defaultSettings, customSettings);\n  };\n\n  var dataPrefix = \"data-\";\n  var processedDataName = \"was-processed\";\n  var timeoutDataName = \"ll-timeout\";\n  var trueString = \"true\";\n\n  var getData = function getData(element, attribute) {\n    return element.getAttribute(dataPrefix + attribute);\n  };\n\n  var setData = function setData(element, attribute, value) {\n    var attrName = dataPrefix + attribute;\n\n    if (value === null) {\n      element.removeAttribute(attrName);\n      return;\n    }\n\n    element.setAttribute(attrName, value);\n  };\n\n  var setWasProcessedData = function setWasProcessedData(element) {\n    return setData(element, processedDataName, trueString);\n  };\n\n  var getWasProcessedData = function getWasProcessedData(element) {\n    return getData(element, processedDataName) === trueString;\n  };\n\n  var setTimeoutData = function setTimeoutData(element, value) {\n    return setData(element, timeoutDataName, value);\n  };\n\n  var getTimeoutData = function getTimeoutData(element) {\n    return getData(element, timeoutDataName);\n  };\n\n  var purgeProcessedElements = function purgeProcessedElements(elements) {\n    return elements.filter(function (element) {\n      return !getWasProcessedData(element);\n    });\n  };\n\n  var purgeOneElement = function purgeOneElement(elements, elementToPurge) {\n    return elements.filter(function (element) {\n      return element !== elementToPurge;\n    });\n  };\n  /* Creates instance and notifies it through the window element */\n\n\n  var createInstance = function createInstance(classObj, options) {\n    var event;\n    var eventString = \"LazyLoad::Initialized\";\n    var instance = new classObj(options);\n\n    try {\n      // Works in modern browsers\n      event = new CustomEvent(eventString, {\n        detail: {\n          instance: instance\n        }\n      });\n    } catch (err) {\n      // Works in Internet Explorer (all versions)\n      event = document.createEvent(\"CustomEvent\");\n      event.initCustomEvent(eventString, false, false, {\n        instance: instance\n      });\n    }\n\n    window.dispatchEvent(event);\n  };\n  /* Auto initialization of one or more instances of lazyload, depending on the \n      options passed in (plain object or an array) */\n\n\n  function autoInitialize(classObj, options) {\n    if (!options) {\n      return;\n    }\n\n    if (!options.length) {\n      // Plain object\n      createInstance(classObj, options);\n    } else {\n      // Array of objects\n      for (var i = 0, optionsItem; optionsItem = options[i]; i += 1) {\n        createInstance(classObj, optionsItem);\n      }\n    }\n  }\n\n  var callbackIfSet = function callbackIfSet(callback, argument) {\n    if (callback) {\n      callback(argument);\n    }\n  };\n\n  var updateLoadingCount = function updateLoadingCount(instance, plusMinus) {\n    instance._loadingCount += plusMinus;\n\n    if (instance._elements.length === 0 && instance._loadingCount === 0) {\n      callbackIfSet(instance._settings.callback_finish);\n    }\n  };\n\n  var getSourceTags = function getSourceTags(parentTag) {\n    var sourceTags = [];\n\n    for (var i = 0, childTag; childTag = parentTag.children[i]; i += 1) {\n      if (childTag.tagName === \"SOURCE\") {\n        sourceTags.push(childTag);\n      }\n    }\n\n    return sourceTags;\n  };\n\n  var setAttributeIfValue = function setAttributeIfValue(element, attrName, value) {\n    if (!value) {\n      return;\n    }\n\n    element.setAttribute(attrName, value);\n  };\n\n  var setImageAttributes = function setImageAttributes(element, settings) {\n    setAttributeIfValue(element, \"sizes\", getData(element, settings.data_sizes));\n    setAttributeIfValue(element, \"srcset\", getData(element, settings.data_srcset));\n    setAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n  };\n\n  var setSourcesImg = function setSourcesImg(element, settings) {\n    var parent = element.parentNode;\n\n    if (parent && parent.tagName === \"PICTURE\") {\n      var sourceTags = getSourceTags(parent);\n      sourceTags.forEach(function (sourceTag) {\n        setImageAttributes(sourceTag, settings);\n      });\n    }\n\n    setImageAttributes(element, settings);\n  };\n\n  var setSourcesIframe = function setSourcesIframe(element, settings) {\n    setAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n  };\n\n  var setSourcesVideo = function setSourcesVideo(element, settings) {\n    var sourceTags = getSourceTags(element);\n    sourceTags.forEach(function (sourceTag) {\n      setAttributeIfValue(sourceTag, \"src\", getData(sourceTag, settings.data_src));\n    });\n    setAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n    element.load();\n  };\n\n  var setSourcesBgImage = function setSourcesBgImage(element, settings) {\n    var srcDataValue = getData(element, settings.data_src);\n    var bgDataValue = getData(element, settings.data_bg);\n\n    if (srcDataValue) {\n      element.style.backgroundImage = \"url(\\\"\".concat(srcDataValue, \"\\\")\");\n    }\n\n    if (bgDataValue) {\n      element.style.backgroundImage = bgDataValue;\n    }\n  };\n\n  var setSourcesFunctions = {\n    IMG: setSourcesImg,\n    IFRAME: setSourcesIframe,\n    VIDEO: setSourcesVideo\n  };\n\n  var setSources = function setSources(element, instance) {\n    var settings = instance._settings;\n    var tagName = element.tagName;\n    var setSourcesFunction = setSourcesFunctions[tagName];\n\n    if (setSourcesFunction) {\n      setSourcesFunction(element, settings);\n      updateLoadingCount(instance, 1);\n      instance._elements = purgeOneElement(instance._elements, element);\n      return;\n    }\n\n    setSourcesBgImage(element, settings);\n  };\n\n  var addClass = function addClass(element, className) {\n    if (supportsClassList) {\n      element.classList.add(className);\n      return;\n    }\n\n    element.className += (element.className ? \" \" : \"\") + className;\n  };\n\n  var removeClass = function removeClass(element, className) {\n    if (supportsClassList) {\n      element.classList.remove(className);\n      return;\n    }\n\n    element.className = element.className.replace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n  };\n\n  var genericLoadEventName = \"load\";\n  var mediaLoadEventName = \"loadeddata\";\n  var errorEventName = \"error\";\n\n  var addEventListener = function addEventListener(element, eventName, handler) {\n    element.addEventListener(eventName, handler);\n  };\n\n  var removeEventListener = function removeEventListener(element, eventName, handler) {\n    element.removeEventListener(eventName, handler);\n  };\n\n  var addEventListeners = function addEventListeners(element, loadHandler, errorHandler) {\n    addEventListener(element, genericLoadEventName, loadHandler);\n    addEventListener(element, mediaLoadEventName, loadHandler);\n    addEventListener(element, errorEventName, errorHandler);\n  };\n\n  var removeEventListeners = function removeEventListeners(element, loadHandler, errorHandler) {\n    removeEventListener(element, genericLoadEventName, loadHandler);\n    removeEventListener(element, mediaLoadEventName, loadHandler);\n    removeEventListener(element, errorEventName, errorHandler);\n  };\n\n  var eventHandler = function eventHandler(event, success, instance) {\n    var settings = instance._settings;\n    var className = success ? settings.class_loaded : settings.class_error;\n    var callback = success ? settings.callback_loaded : settings.callback_error;\n    var element = event.target;\n    removeClass(element, settings.class_loading);\n    addClass(element, className);\n    callbackIfSet(callback, element);\n    updateLoadingCount(instance, -1);\n  };\n\n  var addOneShotEventListeners = function addOneShotEventListeners(element, instance) {\n    var loadHandler = function loadHandler(event) {\n      eventHandler(event, true, instance);\n      removeEventListeners(element, loadHandler, errorHandler);\n    };\n\n    var errorHandler = function errorHandler(event) {\n      eventHandler(event, false, instance);\n      removeEventListeners(element, loadHandler, errorHandler);\n    };\n\n    addEventListeners(element, loadHandler, errorHandler);\n  };\n\n  var managedTags = [\"IMG\", \"IFRAME\", \"VIDEO\"];\n\n  var onEnter = function onEnter(element, instance) {\n    var settings = instance._settings;\n    callbackIfSet(settings.callback_enter, element);\n\n    if (!settings.load_delay) {\n      revealAndUnobserve(element, instance);\n      return;\n    }\n\n    delayLoad(element, instance);\n  };\n\n  var revealAndUnobserve = function revealAndUnobserve(element, instance) {\n    var observer = instance._observer;\n    revealElement(element, instance);\n\n    if (observer && instance._settings.auto_unobserve) {\n      observer.unobserve(element);\n    }\n  };\n\n  var onExit = function onExit(element, instance) {\n    var settings = instance._settings;\n    callbackIfSet(settings.callback_exit, element);\n\n    if (!settings.load_delay) {\n      return;\n    }\n\n    cancelDelayLoad(element);\n  };\n\n  var cancelDelayLoad = function cancelDelayLoad(element) {\n    var timeoutId = getTimeoutData(element);\n\n    if (!timeoutId) {\n      return; // do nothing if timeout doesn't exist\n    }\n\n    clearTimeout(timeoutId);\n    setTimeoutData(element, null);\n  };\n\n  var delayLoad = function delayLoad(element, instance) {\n    var loadDelay = instance._settings.load_delay;\n    var timeoutId = getTimeoutData(element);\n\n    if (timeoutId) {\n      return; // do nothing if timeout already set\n    }\n\n    timeoutId = setTimeout(function () {\n      revealAndUnobserve(element, instance);\n      cancelDelayLoad(element);\n    }, loadDelay);\n    setTimeoutData(element, timeoutId);\n  };\n\n  var revealElement = function revealElement(element, instance, force) {\n    var settings = instance._settings;\n\n    if (!force && getWasProcessedData(element)) {\n      return; // element has already been processed and force wasn't true\n    }\n\n    if (managedTags.indexOf(element.tagName) > -1) {\n      addOneShotEventListeners(element, instance);\n      addClass(element, settings.class_loading);\n    }\n\n    setSources(element, instance);\n    setWasProcessedData(element);\n    callbackIfSet(settings.callback_reveal, element);\n    callbackIfSet(settings.callback_set, element);\n  };\n\n  var isIntersecting = function isIntersecting(entry) {\n    return entry.isIntersecting || entry.intersectionRatio > 0;\n  };\n\n  var getObserverSettings = function getObserverSettings(settings) {\n    return {\n      root: settings.container === document ? null : settings.container,\n      rootMargin: settings.thresholds || settings.threshold + \"px\"\n    };\n  };\n\n  var setObserver = function setObserver(instance) {\n    if (!supportsIntersectionObserver) {\n      return false;\n    }\n\n    instance._observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        return isIntersecting(entry) ? onEnter(entry.target, instance) : onExit(entry.target, instance);\n      });\n    }, getObserverSettings(instance._settings));\n    return true;\n  };\n\n  var LazyLoad = function LazyLoad(customSettings, elements) {\n    this._settings = getInstanceSettings(customSettings);\n    this._loadingCount = 0;\n    setObserver(this);\n    this.update(elements);\n  };\n\n  LazyLoad.prototype = {\n    update: function update(elements) {\n      var _this = this;\n\n      var settings = this._settings;\n\n      var _elements = elements || settings.container.querySelectorAll(settings.elements_selector);\n\n      this._elements = purgeProcessedElements(Array.prototype.slice.call(_elements) // NOTE: nodeset to array for IE compatibility\n      );\n\n      if (isBot || !this._observer) {\n        this.loadAll();\n        return;\n      }\n\n      this._elements.forEach(function (element) {\n        _this._observer.observe(element);\n      });\n    },\n    destroy: function destroy() {\n      var _this2 = this;\n\n      if (this._observer) {\n        this._elements.forEach(function (element) {\n          _this2._observer.unobserve(element);\n        });\n\n        this._observer = null;\n      }\n\n      this._elements = null;\n      this._settings = null;\n    },\n    load: function load(element, force) {\n      revealElement(element, this, force);\n    },\n    loadAll: function loadAll() {\n      var _this3 = this;\n\n      var elements = this._elements;\n      elements.forEach(function (element) {\n        revealAndUnobserve(element, _this3);\n      });\n    }\n  };\n  /* Automatic instances creation if required (useful for async script loading) */\n\n  if (runningOnBrowser) {\n    autoInitialize(LazyLoad, window.lazyLoadOptions);\n  }\n\n  return LazyLoad;\n});","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar virtual = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar keyboard = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar mousewheel = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar navigation = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar pagination = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar scrollbar = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar parallax = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar zoom = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar lazy = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar controller = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar a11y$1 = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar history = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar hashNavigation = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar autoplay = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar effectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar effectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar thumbs = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  \n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport { Swiper, virtual as Virtual, keyboard as Keyboard, mousewheel as Mousewheel, navigation as Navigation, pagination as Pagination, scrollbar as Scrollbar, parallax as Parallax, zoom as Zoom, lazy as Lazy, controller as Controller, a11y$1 as A11y, history as History, hashNavigation as HashNavigation, autoplay as Autoplay, effectFade as EffectFade, effectCube as EffectCube, effectFlip as EffectFlip, effectCoverflow as EffectCoverflow, thumbs as Thumbs };\n","import {\n  Swiper, Navigation, Pagination, A11y, Controller, Thumbs,\n} from 'swiper/dist/js/swiper.esm';\n\nSwiper.use([Navigation, Pagination, A11y, Controller, Thumbs]);\n\nexport default class CustomSwiper {\n  constructor(selector, settings) {\n    return new Swiper(selector, settings);\n  }\n}\n","import LazyLoad from 'vanilla-lazyload/dist/lazyload';\n\nexport default new class LazyLoadInit {\n  constructor() {\n    this.lazySelector = 'js-lazy-load';\n    this.finishSelector = 'lazy-finish';\n\n    this.handler();\n  }\n\n  handler() {\n    document.addEventListener('DOMContentLoaded', () => {\n      this.init();\n    });\n  }\n\n  init() {\n    const lazyElms = document.querySelector(`.${this.lazySelector}`);\n\n    if (!lazyElms) return;\n\n    this.initLazyLoad();\n  }\n\n  update() {\n    const lazyElms = document.querySelector(`.${this.lazySelector}`);\n    if (!lazyElms) return;\n\n    this.initLazyLoad();\n    this.myLazyLoad.update();\n  }\n\n  initLazyLoad() {\n    if (this.myLazyLoad) return;\n\n    this.myLazyLoad = new LazyLoad({\n      elements_selector: `.${this.lazySelector}`,\n      class_loaded: this.finishSelector,\n      callback_loaded: (node) => {\n        const { parentElement } = node;\n\n        if (!parentElement.tagName === 'PICTURE') return;\n\n        parentElement.classList.add(this.finishSelector);\n      },\n    });\n  }\n\n  loadAll() {\n    const lazyElms = document.querySelector(`.${this.lazySelector}`);\n\n    if (!lazyElms) return;\n\n    this.myLazyLoad.loadAll();\n  }\n}();\n","import Swiper from '../../common/custom-swiper/custom-swiper';\nimport LazyLoad from '../../../js/lazy-load';\n\nexport default new class TwoLevelSlider {\n  constructor() {\n    this.sliderAjaxWrapper = 'two-level-slider__slider';\n    this.sliderContainerSelector = 'two-level-slider__container';\n    this.wrapperSelector = 'two-level-slider__wrapper';\n    this.wrapperFlexSelector = 'two-level-slider__wrapper_flex';\n    this.preLoaderSelector = 'two-level-slider__preloader';\n\n    this.tabBtnSelector = 'two-level-slider__btn';\n    this.tabActiveRtnSelector = 'two-level-slider__btn_active';\n\n    this.idSelector = 'data-id';\n\n    this.navigation = {\n      nextEl: '.two-level-slider__nav_next',\n      prevEl: '.two-level-slider__nav_prev',\n      disabledClass: 'two-level-slider__nav_disable',\n      hiddenClass: 'two-level-slider__nav_hidden',\n    };\n\n    this.pagination = {\n      el: '.two-level-slider__pagination',\n      type: 'fraction',\n      lockClass: 'two-level-slider__pagination_disable',\n    };\n\n    this.handler();\n    this.changeSlider();\n  }\n\n  handler() {\n    const slider = document.querySelector(`.${this.sliderContainerSelector}`);\n\n    if (!slider) return;\n\n    document.addEventListener('DOMContentLoaded', () => {\n      this.init();\n    });\n  }\n\n  init() {\n    const { navigation, pagination } = this;\n\n    this.TwoLevelSlider = new Swiper(`.${this.sliderContainerSelector}`, {\n      slidesPerView: 2,\n      slidesPerColumn: 2,\n      slidesPerGroup: 4,\n      spaceBetween: 15,\n      breakpointsInverse: true,\n      watchOverflow: true,\n      watchSlidesVisibility: true,\n      watchSlidesProgress: true,\n      observer: true,\n      navigation,\n      pagination,\n      loop: false,\n      breakpoints: {\n        769: {\n          slidesPerView: 3,\n          spaceBetween: 45,\n          loopedSlides: 8,\n        },\n      },\n      on: {\n        init: () => {\n          const slider = document.querySelector(`.${this.sliderContainerSelector}`);\n          const wrapper = slider.querySelector(`.${this.wrapperSelector}`);\n\n          wrapper.classList.add(this.wrapperFlexSelector);\n        },\n      },\n    });\n  }\n\n  changeSlider() {\n    const btn = document.querySelectorAll(`.${this.tabBtnSelector}`);\n\n    if (!btn) return;\n\n    [...btn].forEach(el => el.addEventListener('click', () => {\n      this.sliderTabHandler(el);\n    }));\n  }\n\n  sliderTabHandler(el) {\n    if (el.matches(`.${this.tabActiveRtnSelector}`)) return;\n\n    const id = el.getAttribute(this.idSelector);\n    const $this = this;\n\n    if (!id) return;\n\n    $.request('ProductList::onAjaxRequest', {\n      data: {\n        category_id: id,\n      },\n      update: { 'product/two-level-slider/two-level-slider-ajax': `.${this.sliderAjaxWrapper}` },\n      success: function (res) { // eslint-disable-line object-shorthand, func-names\n        this.success(res);\n        $this.changeActiveTab(el);\n        $this.init();\n\n        LazyLoad.update();\n      },\n      loading: `.${this.preLoaderSelector}`,\n    });\n  }\n\n  changeActiveTab(node) {\n    const btn = document.querySelectorAll(`.${this.tabBtnSelector}`);\n\n    [...btn].forEach(el => el.classList.remove(this.tabActiveRtnSelector));\n\n    node.classList.add(this.tabActiveRtnSelector);\n  }\n}();\n","import Swiper from '../../common/custom-swiper/custom-swiper';\nimport LazyLoad from '../../../js/lazy-load';\n\nexport default new class HeroSlider {\n  constructor() {\n    this.sliderContainerSelector = 'main-slider';\n    this.slideSelector = 'main-slider__item';\n    this.pagination = {\n      el: '.main-slider__pagination',\n      lockClass: 'main-slider__pagination_disable',\n      type: 'fraction',\n    };\n    this.navigation = {\n      nextEl: '.main-slider__btn_next',\n      prevEl: '.main-slider__btn_prev',\n      disabledClass: 'main-slider__btn_disable',\n      hiddenClass: 'main-slider__btn_hidden',\n    };\n\n    this.handler();\n  }\n\n  handler() {\n    document.addEventListener('DOMContentLoaded', () => {\n      this.init();\n    });\n  }\n\n  init() {\n    const slider = document.querySelector(`.${this.sliderContainerSelector}`);\n\n    if (!slider) return;\n\n    const slides = slider.querySelectorAll(`.${this.slideSelector}`).length;\n    const { navigation, pagination } = this;\n\n    this.HeroSlider = new Swiper(`.${this.sliderContainerSelector}`, {\n      slidesPerView: 1,\n      spaceBetween: 0,\n      watchOverflow: true,\n      watchSlidesVisibility: true,\n      watchSlidesProgress: true,\n      observer: true,\n      pagination,\n      navigation,\n      loop: slides > 1,\n      on: {\n        init: () => {\n          LazyLoad.update();\n        },\n      },\n    });\n  }\n}();\n","import Swiper from '../../common/custom-swiper/custom-swiper';\nimport LazyLoad from '../../../js/lazy-load';\n\nexport default new class BigSlider {\n  constructor() {\n    this.sliderContainerSelector = 'big-slider';\n    this.slideSelector = 'big-slider__item';\n\n    this.navigation = {\n      nextEl: '.big-slider__btn_next',\n      prevEl: '.big-slider__btn_prev',\n      disabledClass: 'big-slider__btn_disable',\n      hiddenClass: 'big-slider__btn_hidden',\n    };\n\n    this.handler();\n  }\n\n  handler() {\n    document.addEventListener('DOMContentLoaded', () => {\n      this.init();\n    });\n  }\n\n  init() {\n    const slider = document.querySelector(`.${this.sliderContainerSelector}`);\n\n    if (!slider) return;\n\n    const slides = slider.querySelectorAll(`.${this.slideSelector}`).length;\n    const { navigation } = this;\n\n    this.BigSlider = new Swiper(`.${this.sliderContainerSelector}`, {\n      slidesPerView: 1,\n      spaceBetween: 0,\n      loopedSlides: 4,\n      watchOverflow: true,\n      watchSlidesVisibility: true,\n      watchSlidesProgress: true,\n      observer: true,\n      navigation,\n      loop: slides > 1,\n      on: {\n        init: () => {\n          LazyLoad.update();\n        },\n      },\n    });\n  }\n}();\n","import Swiper from '../../common/custom-swiper/custom-swiper';\nimport LazyLoad from '../../../js/lazy-load';\n\nexport default new class brandSlider {\n  constructor() {\n    this.sliderContainerSelector = 'brand-slider__container';\n    this.slideSelector = 'brand-slider__slide';\n\n    this.navigation = {\n      nextEl: '.brand-slider__nav_next',\n      prevEl: '.brand-slider__nav_prev',\n      disabledClass: 'brand-slider__nav_disable',\n      hiddenClass: 'brand-slider__nav_hidden',\n    };\n\n    this.pagination = {\n      el: '.brand-slider__pagination',\n      lockClass: 'brand-slider__pagination_disable',\n      type: 'fraction',\n    };\n\n    this.handler();\n  }\n\n  handler() {\n    const slider = document.querySelector(`.${this.sliderContainerSelector}`);\n\n    if (!slider) return;\n\n    document.addEventListener('DOMContentLoaded', () => {\n      this.init(slider);\n    });\n  }\n\n  init(slider) {\n    const { navigation, pagination } = this;\n    const slides = slider.querySelectorAll(`.${this.slideSelector}`);\n\n    this.blogSlider = new Swiper(`.${this.sliderContainerSelector}`, {\n      slidesPerView: 2,\n      slidesPerGroup: 2,\n      spaceBetween: 12,\n      breakpointsInverse: true,\n      watchOverflow: true,\n      watchSlidesVisibility: true,\n      watchSlidesProgress: true,\n      observer: true,\n      navigation,\n      pagination,\n      loop: slides.length > 2,\n      breakpoints: {\n        768: {\n          slidesPerView: 4,\n          spaceBetween: 67,\n        },\n      },\n      on: {\n        init: () => {\n          LazyLoad.update();\n        },\n      },\n    });\n  }\n}();\n","import Swiper from '../../common/custom-swiper/custom-swiper';\nimport LazyLoad from '../../../js/lazy-load';\n\nexport default new class blogSlider {\n  constructor() {\n    this.sliderContainerSelector = 'news-slider__container';\n    this.slideSelector = 'news-slider__slide';\n    this.sliderAjaxWrapperSelector = 'news-slider__slider';\n    this.preLoaderSelector = 'news-slider__preloader';\n    this.tabBtnSelector = 'news-slider__btn';\n    this.tabActiveRtnSelector = 'news-slider__btn_active';\n\n    this.idSelector = 'data-id';\n\n    this.navigation = {\n      nextEl: '.news-slider__nav_next',\n      prevEl: '.news-slider__nav_prev',\n      disabledClass: 'news-slider__nav_disable',\n      hiddenClass: 'news-slider__nav_hidden',\n    };\n\n    this.pagination = {\n      el: '.news-slider__pagination',\n      type: 'fraction',\n      lockClass: 'news-slider__pagination_disable',\n    };\n\n    this.handler();\n    this.changeSlider();\n  }\n\n  handler() {\n    const slider = document.querySelector(`.${this.sliderContainerSelector}`);\n\n    if (!slider) return;\n\n    document.addEventListener('DOMContentLoaded', () => {\n      this.init();\n    });\n  }\n\n  init() {\n    const { navigation, pagination } = this;\n    const slider = document.querySelector(`.${this.sliderContainerSelector}`);\n\n    if (!slider) return;\n\n    const slides = slider.querySelectorAll(`.${this.slideSelector}`);\n\n    this.blogSlider = new Swiper(`.${this.sliderContainerSelector}`, {\n      slidesPerView: 2,\n      spaceBetween: 15,\n      breakpointsInverse: true,\n      watchOverflow: true,\n      watchSlidesVisibility: true,\n      watchSlidesProgress: true,\n      observer: true,\n      navigation,\n      pagination,\n      loop: slides.length > 3,\n      breakpoints: {\n        768: {\n          slidesPerView: 3,\n          spaceBetween: 45,\n        },\n      },\n      on: {\n        init: () => {\n          LazyLoad.update();\n        },\n      },\n    });\n  }\n\n  changeSlider() {\n    const btn = document.querySelectorAll(`.${this.tabBtnSelector}`);\n\n    if (!btn) return;\n\n    [...btn].forEach(el => el.addEventListener('click', () => {\n      this.sliderTabHandler(el);\n    }));\n  }\n\n  sliderTabHandler(el) {\n    if (el.matches(`.${this.tabActiveRtnSelector}`)) return;\n\n    const id = el.getAttribute(this.idSelector);\n    const $this = this;\n\n    if (!id) return;\n\n    $.request('ArticleList::onAjaxRequest', {\n      data: {\n        category_id: id,\n      },\n      update: { 'article/news-slider/news-slider-ajax': `.${this.sliderAjaxWrapperSelector}` },\n      success: function (res) { // eslint-disable-line object-shorthand, func-names\n        this.success(res);\n        $this.changeActiveTab(el);\n        $this.init();\n        LazyLoad.update();\n      },\n      loading: `.${this.preLoaderSelector}`,\n    });\n  }\n\n  changeActiveTab(node) {\n    const btn = document.querySelectorAll(`.${this.tabBtnSelector}`);\n\n    [...btn].forEach(el => el.classList.remove(this.tabActiveRtnSelector));\n\n    node.classList.add(this.tabActiveRtnSelector);\n  }\n}();\n"],"sourceRoot":""}