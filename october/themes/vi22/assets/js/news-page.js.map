{"version":3,"sources":["webpack:///./node_modules/social-likes-next/lib/index.js","webpack:///./node_modules/social-likes-next/lib/services/index.js","webpack:///./node_modules/social-likes-next/lib/social-likes.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/form/subscribe/subscribe.js","webpack:///./node_modules/social-likes-next/lib/services/pinterest.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/article/news-simple-slider/news-simple-slider.js","webpack:///./node_modules/social-likes-next/node_modules/deepmerge/index.js","webpack:///./node_modules/social-likes-next/lib/services/twitter.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/common/custom-swiper/custom-swiper.js","webpack:///./node_modules/social-likes-next/lib/services/telegram.js","webpack:///./node_modules/social-likes-next/lib/services/plusone.js","webpack:///./node_modules/social-likes-next/lib/services/linkedin.js","webpack:///./node_modules/social-likes-next/lib/services/facebook.js","webpack:///./node_modules/social-likes-next/lib/services/vkontakte.js","webpack:///./node_modules/social-likes-next/lib/services/odnoklassniki.js","webpack:///./node_modules/social-likes-next/lib/util.js","webpack:///./node_modules/social-likes-next/lib/config.js","webpack:///./node_modules/social-likes-next/lib/button.js"],"names":["Object","defineProperty","exports","value","default","init","autoInit","obj","_config","__webpack_require__","_util","_socialLikes","_socialLikes2","__esModule","symbol","elem","options","arguments","length","undefined","instance","update","wait","elements","document","querySelectorAll","prefix","toArray","forEach","addEventListener","_facebook","enumerable","get","_interopRequireDefault","_odnoklassniki","_pinterest","_plusone","_twitter","_vkontakte","_telegram","_linkedin","_createClass","defineProperties","target","props","i","descriptor","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_deepmerge2","_button2","defaults","url","window","location","href","replace","hash","title","SocialLikes","container","TypeError","_classCallCheck","this","classList","add","dataset","buttons","children","map","button","$","constructor","subscribeFormSelector","subscribeInputSelector","submitBtnSelector","inValidSelector","successSelector","successVisibleSelector","preLoaderSelector","delay","handler","form","querySelector","setTimeout","checkForm","matches","input","email","request","data","loading","complete","res","showTooltip","dispatchEvent","Event","bubbles","statusText","getToolTip","hideToolTip","remove","icon","popupUrl","popupWidth","popupHeight","sliderContainerSelector","slideSelector","navigation","nextEl","prevEl","disabledClass","hiddenClass","pagination","el","type","lockClass","mediaQueryList","matchMedia","addListener","blogSlider","Swiper","slidesPerView","spaceBetween","breakpointsInverse","watchOverflow","watchSlidesVisibility","watchSlidesProgress","observer","breakpoints","768","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","deepmerge","src","array","Array","isArray","dst","concat","e","indexOf","push","keys","call","module","click","test","doc","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","createElement","childNodes","style","setAttribute","getElementsByTagName","win","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","clearTimeout","Dom7","[object Object]","arr","self","selector","context","els","tempParent","html","trim","toCreate","innerHTML","match","split","nodeType","unique","uniqueArray","fn","Class","Methods","addClass","className","classes","j","removeClass","hasClass","contains","toggleClass","toggle","attr","attrs","getAttribute","attrName","removeAttr","removeAttribute","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","splice","dom7proxy","trigger","evt","detail","cancelable","filter","dataIndex","transitionEnd","callback","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","prop","each","text","textContent","compareWith","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","methodName","Utils","object","nextTick","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","a","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","query","params","param","urlToParse","paramsPart","decodeURIComponent","isObject","o","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","extend","swiper_esm_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","passiveListener","supportsPassive","opts","gestures","swiper_esm_Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","slice","instanceParams","modules","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","checkOverflow","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_transition","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","setBreakpoint","freeMode","newTranslate","min","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","which","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","returnValue","eventsTarged","handleMouseEnter","handleMouseLeave","handle","Navigation","$nextEl","$prevEl","onNextClick","onPrevClick","hideOnClick","isHidden","Pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","number","render","Controller","LinearSpline","binarySearch","maxIndex","minIndex","guess","i1","i3","interpolate","x2","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","keyCode","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","a11y$1","notificationClass","updateNavigation","updatePagination","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","d","__webpack_exports__","custom_swiper_CustomSwiper","A11y","CustomSwiper","settings","node","addParamsToUrl","ignore","objectToQueryString","glue","openPopup","_ref","round","open","focus","makeUrl","template","encodeURIComponent","mod","base","elemDelimiter","modDelimiter","list","svg","paths","cls","p","reduce","pairs","tmpl","_deepmerge","baseServices","newObj","hasOwnProperty","_interopRequireWildcard","services","socialLikesButtons","Button","widget","initService","service","initHtml","initEvents","_","_this","cx","buttonHtml","oldHtml","clickUrl","buttonTag","buttonHref","buttonClasses","svgHtml","onKeyDown","urlTemplate","ok","makeUrlWithParams"],"mappings":"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","file":"/js/news-page.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = init;\nexports.autoInit = autoInit;\n\nvar _config = require('./config');\n\nvar _util = require('./util');\n\nvar _socialLikes = require('./social-likes');\n\nvar _socialLikes2 = _interopRequireDefault(_socialLikes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Symbol to store an instance reference in a DOM node\nvar symbol = 'socialLikes';\n\n/**\n * Initialize or update Social Likes on a DOM element.\n *\n * @param {HTMLElement} elem DOM element.\n * @param {Object} [options] Options.\n * @return {SocialLikes}\n */\nfunction init(elem) {\n\tvar options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\tvar instance = elem[symbol];\n\tif (instance) {\n\t\tinstance.update(options);\n\t} else {\n\t\tinstance = elem[symbol] = new _socialLikes2.default(elem, options);\n\t}\n\treturn instance;\n}\n\n/**\n * Init Social Likes on all elements with class .social-likes.\n *\n * @param {boolean} wait Wait for DOM ready if no elements found.\n */\nfunction autoInit() {\n\tvar wait = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\n\tvar elements = document.querySelectorAll('.' + _config.prefix);\n\tif (elements) {\n\t\t(0, _util.toArray)(elements).forEach(function (elem) {\n\t\t\treturn init(elem);\n\t\t});\n\t} else if (wait) {\n\t\t// No elements found. Wait for DOM content loaded to try again in case the script was included in the <head>\n\t\tdocument.addEventListener('DOMContentLoaded', autoInit);\n\t}\n}\n\n// Auto initialization\nautoInit(true);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _facebook = require('./facebook');\n\nObject.defineProperty(exports, 'facebook', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_facebook).default;\n  }\n});\n\nvar _odnoklassniki = require('./odnoklassniki');\n\nObject.defineProperty(exports, 'odnoklassniki', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_odnoklassniki).default;\n  }\n});\n\nvar _pinterest = require('./pinterest');\n\nObject.defineProperty(exports, 'pinterest', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_pinterest).default;\n  }\n});\n\nvar _plusone = require('./plusone');\n\nObject.defineProperty(exports, 'plusone', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_plusone).default;\n  }\n});\n\nvar _twitter = require('./twitter');\n\nObject.defineProperty(exports, 'twitter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_twitter).default;\n  }\n});\n\nvar _vkontakte = require('./vkontakte');\n\nObject.defineProperty(exports, 'vkontakte', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_vkontakte).default;\n  }\n});\n\nvar _telegram = require('./telegram');\n\nObject.defineProperty(exports, 'telegram', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_telegram).default;\n  }\n});\n\nvar _linkedin = require('./linkedin');\n\nObject.defineProperty(exports, 'linkedin', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_linkedin).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _deepmerge = require('deepmerge');\n\nvar _deepmerge2 = _interopRequireDefault(_deepmerge);\n\nvar _button = require('./button');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _util = require('./util');\n\nvar _config = require('./config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Default options\nvar defaults = {\n\turl: window.location.href.replace(window.location.hash, ''),\n\ttitle: document.title\n};\n\n/**\n * Social Likes.\n *\n * @param {HTMLElement} container HTML container element.\n * @param {Object} [options] Options.\n */\n\nvar SocialLikes = function () {\n\tfunction SocialLikes(container) {\n\t\tvar options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t\t_classCallCheck(this, SocialLikes);\n\n\t\tcontainer.classList.add(_config.prefix);\n\n\t\t// Options: default < constructor < container data-attributes\n\t\toptions = (0, _deepmerge2.default)((0, _deepmerge2.default)(defaults, options), (0, _util.dataset)(container));\n\t\tthis.url = options.url;\n\n\t\tthis.buttons = (0, _util.toArray)(container.children).map(function (elem) {\n\t\t\treturn new _button2.default(elem, options);\n\t\t});\n\n\t\tcontainer.classList.add(_config.prefix + '_visible');\n\t}\n\n\t/**\n  * Update options.\n  *\n  * @param {Object} options New options.\n  */\n\n\n\t_createClass(SocialLikes, [{\n\t\tkey: 'update',\n\t\tvalue: function update(options) {\n\t\t\tif (options.url === this.url) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update each button\n\t\t\tthis.buttons.forEach(function (button) {\n\t\t\t\treturn button.update(options);\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn SocialLikes;\n}();\n\nexports.default = SocialLikes;","export default new class Subscribe {\n  constructor() {\n    this.subscribeFormSelector = 'subscribe__form';\n    this.subscribeInputSelector = 'subscribe__email';\n    this.submitBtnSelector = 'subscribe__submit';\n    this.inValidSelector = '_invalid';\n    this.successSelector = 'subscribe__success';\n    this.successVisibleSelector = 'subscribe__success_visible';\n    this.preLoaderSelector = 'subscribe__preloader';\n    this.delay = 2000;\n\n    this.handler();\n  }\n\n  handler() {\n    const form = document.querySelector(`.${this.subscribeFormSelector}`);\n\n    if (!form) return;\n\n    const submitBtn = form.querySelector(`.${this.submitBtnSelector}`);\n\n    submitBtn.addEventListener('click', () => {\n      setTimeout(() => {\n        this.checkForm(form);\n      }, 0);\n    });\n  }\n\n  checkForm(form) {\n    if (form.matches(`.${this.inValidSelector}`)) return;\n\n    const input = form.querySelector(`.${this.subscribeInputSelector}`);\n    const email = input.value;\n\n    $.request('mailSignup::onSignup', {\n      data: {\n        email,\n      },\n      loading: `.${this.preLoaderSelector}`,\n      complete: (res) => {\n        this.showTooltip(res);\n        setTimeout(() => {\n          input.value = '';\n          input.dispatchEvent(new Event('change', {\n            bubbles: true,\n          }));\n        }, this.delay);\n      },\n    });\n  }\n\n  showTooltip(res) {\n    const { statusText } = res;\n\n    if (statusText !== 'OK') return;\n\n    const successNode = this.getToolTip();\n\n    successNode.classList.add(this.successVisibleSelector);\n\n    setTimeout(() => {\n      this.hideToolTip();\n    }, this.delay);\n  }\n\n  hideToolTip() {\n    const successNode = this.getToolTip();\n\n    successNode.classList.remove(this.successVisibleSelector);\n  }\n\n  getToolTip() {\n    return document.querySelector(`.${this.successSelector}`);\n  }\n}();\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/* eslint-disable max-len */\n\nexports.default = {\n\ticon: 'M7.99 0c-4.417 0-8 3.582-8 8 0 3.39 2.11 6.284 5.086 7.45-.07-.633-.133-1.604.028-2.295.145-.624.938-3.977.938-3.977s-.24-.48-.24-1.188c0-1.112.645-1.943 1.448-1.943.683 0 1.012.512 1.012 1.127 0 .686-.437 1.713-.663 2.664-.19.796.398 1.446 1.184 1.446 1.422 0 2.515-1.5 2.515-3.664 0-1.915-1.377-3.255-3.343-3.255-2.276 0-3.612 1.707-3.612 3.472 0 .688.265 1.425.595 1.826.065.08.075.15.055.23-.06.252-.195.796-.222.907-.035.146-.116.177-.268.107-1-.465-1.624-1.926-1.624-3.1 0-2.523 1.835-4.84 5.287-4.84 2.775 0 4.932 1.977 4.932 4.62 0 2.757-1.74 4.976-4.152 4.976-.81 0-1.573-.42-1.834-.92l-.498 1.903c-.18.695-.668 1.566-.994 2.097.75.232 1.544.357 2.37.357 4.417 0 8-3.582 8-8s-3.583-8-8-8z',\n\tpopupUrl: 'https://www.pinterest.com/pin/create/button/?url={url}&description={title}',\n\tpopupWidth: 750,\n\tpopupHeight: 550\n};","import Swiper from '../../common/custom-swiper/custom-swiper';\n\nexport default new class blogSlider {\n  constructor() {\n    this.sliderContainerSelector = 'news-simple-slider__container';\n    this.slideSelector = 'news-simple-slider__slide';\n\n    this.navigation = {\n      nextEl: '.news-simple-slider__nav_next',\n      prevEl: '.news-simple-slider__nav_prev',\n      disabledClass: 'news-simple-slider__nav_disable',\n      hiddenClass: 'news-simple-slider__nav_hidden',\n    };\n\n    this.pagination = {\n      el: '.news-simple-slider__pagination',\n      type: 'fraction',\n      lockClass: 'news-simple-slider__pagination_disable',\n    };\n\n    this.mediaQueryList = window.matchMedia('(min-width: 769px)');\n\n    this.handler();\n  }\n\n  handler() {\n    const slider = document.querySelector(`.${this.sliderContainerSelector}`);\n\n    if (!slider) return;\n\n    this.init();\n\n    this.mediaQueryList.addListener(() => {\n      this.init();\n    });\n  }\n\n  init() {\n    const { navigation, pagination } = this;\n\n    this.blogSlider = new Swiper(`.${this.sliderContainerSelector}`, {\n      slidesPerView: 2,\n      spaceBetween: 15,\n      breakpointsInverse: true,\n      watchOverflow: true,\n      watchSlidesVisibility: true,\n      watchSlidesProgress: true,\n      observer: true,\n      pagination,\n      navigation,\n      breakpoints: {\n        768: {\n          slidesPerView: 3,\n          spaceBetween: 45,\n        },\n      },\n    });\n  }\n}();\n","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nreturn function deepmerge(target, src) {\n    var array = Array.isArray(src);\n    var dst = array && [] || {};\n\n    if (array) {\n        target = target || [];\n        dst = dst.concat(target);\n        src.forEach(function(e, i) {\n            if (typeof dst[i] === 'undefined') {\n                dst[i] = e;\n            } else if (typeof e === 'object') {\n                dst[i] = deepmerge(target[i], e);\n            } else {\n                if (target.indexOf(e) === -1) {\n                    dst.push(e);\n                }\n            }\n        });\n    } else {\n        if (target && typeof target === 'object') {\n            Object.keys(target).forEach(function (key) {\n                dst[key] = target[key];\n            })\n        }\n        Object.keys(src).forEach(function (key) {\n            if (typeof src[key] !== 'object' || !src[key]) {\n                dst[key] = src[key];\n            }\n            else {\n                if (!target[key]) {\n                    dst[key] = src[key];\n                } else {\n                    dst[key] = deepmerge(target[key], src[key]);\n                }\n            }\n        });\n    }\n\n    return dst;\n}\n\n}));\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/* eslint-disable max-len */\n\nexports.default = {\n\ticon: 'M15.96 3.42c-.04.153-.144.31-.237.414l-.118.058v.118l-.59.532-.237.295c-.05.036-.398.21-.413.237V6.49h-.06v.473h-.058v.294h-.058v.296h-.06v.235h-.06v.237h-.058c-.1.355-.197.71-.295 1.064h-.06v.116h-.06c-.02.1-.04.197-.058.296h-.06c-.04.118-.08.237-.118.355h-.06c-.038.118-.078.236-.117.353l-.118.06-.06.235-.117.06v.116l-.118.06v.12h-.06c-.02.057-.038.117-.058.175l-.118.06v.117c-.06.04-.118.08-.177.118v.118l-.237.177v.118l-.59.53-.532.592h-.117c-.06.078-.118.156-.177.236l-.177.06-.06.117h-.118l-.06.118-.176.06v.058h-.118l-.06.118-.353.12-.06.117c-.078.02-.156.04-.235.058v.06c-.118.038-.236.078-.354.118v.058H8.76v.06h-.12v.06h-.176v.058h-.118v.06H8.17v.058H7.99v.06l-.413.058v.06h-.237c-.667.22-1.455.293-2.36.293h-.886v-.058h-.53v-.06H3.27v-.06h-.295v-.06H2.68v-.057h-.177v-.06h-.236v-.058H2.09v-.06h-.177v-.058h-.177v-.06H1.56v-.058h-.12v-.06l-.294-.06v-.057c-.118-.04-.236-.08-.355-.118v-.06H.674v-.058H.555v-.06H.437v-.058H.32l-.06-.12H.142v-.058c-.13-.08-.083.026-.177-.118H1.56v-.06c.294-.04.59-.077.884-.117v-.06h.177v-.058h.237v-.06h.118v-.06h.177v-.057h.118v-.06h.177v-.058l.236-.06v-.058l.236-.06c.02-.038.04-.078.058-.117l.237-.06c.02-.04.04-.077.058-.117h.118l.06-.118h.118c.036-.025.047-.078.118-.118V12.1c-1.02-.08-1.84-.54-2.303-1.183-.08-.058-.157-.118-.236-.176v-.117l-.118-.06v-.117c-.115-.202-.268-.355-.296-.65.453.004.987.008 1.354-.06v-.06c-.254-.008-.47-.08-.65-.175v-.058H2.32v-.06c-.08-.02-.157-.04-.236-.058l-.06-.118h-.117l-.118-.178h-.12c-.077-.098-.156-.196-.235-.294l-.118-.06v-.117l-.177-.12c-.35-.502-.6-1.15-.59-2.006h.06c.204.234.948.377 1.357.415v-.06c-.257-.118-.676-.54-.827-.768V5.9l-.118-.06c-.04-.117-.08-.236-.118-.354h-.06v-.118H.787c-.04-.196-.08-.394-.118-.59-.06-.19-.206-.697-.118-1.005h.06V3.36h.058v-.177h.06v-.177h.057V2.83h.06c.04-.118.078-.236.117-.355h.118v.06c.12.097.237.196.355.295v.118l.118.058c.08.098.157.197.236.295l.176.06.354.413h.118l.177.236h.118l.06.117h.117c.04.06.08.118.118.177h.118l.06.118.235.06.06.117.356.12.06.117.53.176v.06h.118v.058l.236.06v.06c.118.02.236.04.355.058v.06h.177v.058h.177v.06h.176v.058h.236v.06l.472.057v.06l1.417.18v-.237c-.1-.112-.058-.442-.057-.65 0-.573.15-.99.354-1.358v-.117l.118-.06.06-.235.176-.118v-.118c.14-.118.276-.236.414-.355l.06-.117h.117l.12-.177.235-.06.06-.117h.117v-.058H9.7v-.058h.177v-.06h.177v-.058h.177v-.06h.296v-.058h1.063v.058h.294v.06h.177v.058h.178v.06h.177v.058h.118v.06h.118l.06.117c.08.018.158.038.236.058.04.06.08.118.118.177h.118l.06.117c.142.133.193.163.472.178.136-.12.283-.05.472-.118v-.06h.177v-.058h.177v-.06l.236-.058v-.06h.177l.59-.352v.176h-.058l-.06.295h-.058v.117h-.06v.118l-.117.06v.118l-.177.118v.117l-.118.06-.354.412h-.117l-.177.236h.06c.13-.112.402-.053.59-.117l1.063-.353z',\n\tpopupUrl: 'https://twitter.com/intent/tweet?url={url}&text={title}',\n\tpopupWidth: 600,\n\tpopupHeight: 450,\n\tclick: function click() {\n\t\t// Add a colon to improve readability\n\t\tif (!/[.?!:\\-–—]\\s*$/.test(this.options.title)) {\n\t\t\tthis.options.title += ':';\n\t\t}\n\t\treturn true;\n\t}\n};","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar virtual = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar keyboard = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar mousewheel = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar navigation = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar pagination = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar scrollbar = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar parallax = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar zoom = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar lazy = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar controller = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar a11y$1 = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar history = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar hashNavigation = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar autoplay = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar effectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar effectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar thumbs = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  \n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport { Swiper, virtual as Virtual, keyboard as Keyboard, mousewheel as Mousewheel, navigation as Navigation, pagination as Pagination, scrollbar as Scrollbar, parallax as Parallax, zoom as Zoom, lazy as Lazy, controller as Controller, a11y$1 as A11y, history as History, hashNavigation as HashNavigation, autoplay as Autoplay, effectFade as EffectFade, effectCube as EffectCube, effectFlip as EffectFlip, effectCoverflow as EffectCoverflow, thumbs as Thumbs };\n","import {\n  Swiper, Navigation, Pagination, A11y, Controller, Thumbs,\n} from 'swiper/dist/js/swiper.esm';\n\nSwiper.use([Navigation, Pagination, A11y, Controller, Thumbs]);\n\nexport default class CustomSwiper {\n  constructor(selector, settings) {\n    return new Swiper(selector, settings);\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/* eslint-disable max-len */\n\nexports.default = {\n\ticon: 'M6,11L5,8l11-8L0.622,5.914c0,0-0.672,0.23-0.619,0.655c0.053,0.425,0.602,0.619,0.602,0.619l3.575,1.203L5.8,13.545l2.742-2.411l-0.007-0.005l3.607,2.766c0.973,0.425,1.327-0.46,1.327-0.46L16,0L6,11z',\n\tpopupUrl: 'https://telegram.me/share/url?url={url}&title={title}',\n\tpopupWidth: 600,\n\tpopupHeight: 500\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/* eslint-disable max-len */\n\nexports.default = {\n\ticon: 'M8,6.5v3h4.291c-0.526,2.01-2.093,3.476-4.315,3.476C5.228,12.976,3,10.748,3,8c0-2.748,2.228-4.976,4.976-4.976c1.442,0,2.606,0.623,3.397,1.603L13.52,2.48C12.192,0.955,10.276,0,8,0C3.582,0,0,3.582,0,8s3.582,8,8,8s7.5-3.582,7.5-8V6.5H8z',\n\tpopupUrl: 'https://plus.google.com/share?url={url}',\n\tpopupWidth: 500,\n\tpopupHeight: 500\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/* eslint-disable max-len */\n\nexports.default = {\n\ticon: 'M14.4,0H1.6C0.7,0,0,0.7,0,1.6v12.7C0,15.3,0.7,16,1.6,16h12.7c0.9,0,1.6-0.7,1.6-1.6V1.6C16,0.7,15.3,0,14.4,0zM3.4,1.9C4.3,1.9,5,2.5,5,3.3c0,0.8-0.7,1.5-1.6,1.5S1.8,4.1,1.8,3.3C1.8,2.5,2.6,1.9,3.4,1.9z M5.2,14.1H1.7V5.9h3.5V14.1z M14.1,14.1h-2.7V9.7c0-0.9-0.6-1.6-1.5-1.6C9,8.1,8.7,8.8,8.7,9.5c0,0.9,0,4.7,0,4.7H6V5.9h2.7v1.2c0.4-0.5,1.4-1.2,2.4-1.2c1.3,0,1.6,0.3,2.1,0.8c1,1,0.9,2.4,0.9,2.9h0L14.1,14.1z',\n\tpopupUrl: 'https://www.linkedin.com/shareArticle?url={url}',\n\tpopupWidth: 600,\n\tpopupHeight: 500\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = {\n\ticon: 'M13 0H3C1 0 0 1 0 3v10c0 2 1 3 3 3h5V9H6V7h2V5c0-2 2-2 2-2h3v2h-3v2h3l-.5 2H10v7h3c2 0 3-1 3-3V3c0-2-1-3-3-3z',\n\tpopupUrl: 'https://www.facebook.com/sharer/sharer.php?u={url}',\n\tpopupWidth: 600,\n\tpopupHeight: 500\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/* eslint-disable max-len */\n\nexports.default = {\n\ticon: 'M13 0H3C1 0 0 1 0 3v10c0 2 1 3 3 3h10c2 0 3-1 3-3V3c0-2-1-3-3-3zm.452 11.394l-1.603.022s-.345.068-.8-.243c-.598-.41-1.164-1.48-1.604-1.342-.446.144-.432 1.106-.432 1.106s.003.206-.1.315c-.11.12-.326.144-.326.144H7.87s-1.582.095-2.975-1.356c-1.52-1.583-2.862-4.723-2.862-4.723s-.078-.206.006-.305c.094-.112.35-.12.35-.12l1.716-.01s.162.026.277.11c.095.07.15.202.15.202s.276.7.643 1.335c.716 1.238 1.05 1.508 1.293 1.376.353-.193.247-1.75.247-1.75s.006-.565-.178-.817c-.145-.194-.415-.25-.534-.267-.096-.014.062-.238.267-.338.31-.15.853-.16 1.497-.153.502.004.646.035.842.083.59.143.39.694.39 2.016 0 .422-.075 1.018.23 1.215.13.085.453.013 1.256-1.352.38-.647.666-1.407.666-1.407s.062-.136.16-.194c.098-.06.232-.04.232-.04l1.804-.012s.542-.065.63.18c.092.257-.203.857-.94 1.84-1.21 1.612-1.345 1.46-.34 2.394.96.89 1.16 1.325 1.192 1.38.4.66-.44.71-.44.71z',\n\tpopupUrl: 'https://vk.com/share.php?url={url}',\n\tpopupWidth: 550,\n\tpopupHeight: 330\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/* eslint-disable max-len */\n\nexports.default = {\n\ticon: 'M8 6.107c.888 0 1.607-.72 1.607-1.607 0-.888-.72-1.607-1.607-1.607s-1.607.72-1.607 1.607c0 .888.72 1.607 1.607 1.607zM13 0H3C1 0 0 1 0 3v10c0 2 1 3 3 3h10c2 0 3-1 3-3V3c0-2-1-3-3-3zM8 .75c2.07 0 3.75 1.68 3.75 3.75 0 2.07-1.68 3.75-3.75 3.75S4.25 6.57 4.25 4.5C4.25 2.43 5.93.75 8 .75zm3.826 12.634c.42.42.42 1.097 0 1.515-.21.208-.483.313-.758.313-.274 0-.548-.105-.758-.314L8 12.59 5.69 14.9c-.42.418-1.098.418-1.516 0s-.42-1.098 0-1.516L6.357 11.2c-1.303-.386-2.288-1.073-2.337-1.11-.473-.354-.57-1.025-.214-1.5.354-.47 1.022-.567 1.496-.216.03.022 1.4.946 2.698.946 1.31 0 2.682-.934 2.693-.943.474-.355 1.146-.258 1.5.213.355.474.26 1.146-.214 1.5-.05.036-1.035.723-2.338 1.11l2.184 2.184z',\n\tpopupUrl: 'https://connect.ok.ru/dk?st.cmd=WidgetSharePreview&service=odnoklassniki&st.shareUrl={url}',\n\tpopupWidth: 550,\n\tpopupHeight: 360\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.dataset = dataset;\nexports.addParamsToUrl = addParamsToUrl;\nexports.objectToQueryString = objectToQueryString;\nexports.openPopup = openPopup;\nexports.makeUrl = makeUrl;\nexports.template = template;\nexports.className = className;\nexports.toArray = toArray;\nexports.svg = svg;\n\nvar _config = require('./config');\n\n/**\n * Return node.dataset as an object\n *\n * @param {Node} node DOM node.\n * @return {Object}\n */\nfunction dataset(node) {\n\tvar data = {};\n\tfor (var key in node.dataset) {\n\t\tdata[key] = node.dataset[key];\n\t}\n\treturn data;\n}\n\n/**\n * Append params to the URL.\n *\n * @param {string} url Base URL.\n * @param {Object} params Params to append.\n * @param {string[]} [ignore] List of keys to ignore.\n * @return {string}\n */\nfunction addParamsToUrl(url, params) {\n\tvar ignore = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];\n\n\tparams = objectToQueryString(params, ignore);\n\tif (!params) {\n\t\treturn url;\n\t}\n\n\tvar glue = url.indexOf('?') === -1 ? '?' : '&';\n\treturn url + glue + params;\n}\n\n/**\n * Convert object to a query string: a=1&b=2.\n *\n * @param {Object} params Parameters.\n * @param {string[]} [ignore] List of keys to ignore.\n * @return {string}\n */\nfunction objectToQueryString(params) {\n\tvar ignore = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n\treturn Object.keys(params).reduce(function (pairs, key) {\n\t\tvar value = params[key];\n\t\tif (value !== null && value !== '' && ignore.indexOf(key) === -1) {\n\t\t\tpairs.push(key + '=' + encodeURIComponent(value));\n\t\t}\n\t\treturn pairs;\n\t}, []).join('&');\n}\n\n/**\n * Open popup window.\n *\n * @param {String} url URL.\n * @param {Number} options.width Width.\n * @param {Number} options.height Height.\n * @param {String} options.name Window name.\n * @return {Object}\n */\nfunction openPopup(url, _ref) {\n\tvar width = _ref.width;\n\tvar height = _ref.height;\n\tvar name = _ref.name;\n\n\tvar left = Math.round(screen.width / 2 - width / 2);\n\tvar top = 0;\n\tif (screen.height > height) {\n\t\ttop = Math.round(screen.height / 3 - height / 2);\n\t}\n\n\tvar win = window.open(url, name, '\\n\\t\\tleft=' + left + ',\\n\\t\\ttop=' + top + ',\\n\\t\\twidth=' + width + ',\\n\\t\\theight=' + height + ',\\n\\t\\tpersonalbar=0,\\n\\t\\ttoolbar=0,\\n\\t\\tscrollbars=1,\\n\\t\\tresizable=1\\n\\t');\n\tif (win) {\n\t\twin.focus();\n\t\treturn win;\n\t}\n\tlocation.href = url;\n\treturn null;\n}\n\n/**\n * Template with encodeURIComponent for URLs.\n *\n * @param {String} url URL template.\n * @param {Object} context Replacements object.\n * @return {String}\n */\nfunction makeUrl(url, context) {\n\treturn template(url, context, encodeURIComponent);\n}\n\n/**\n * Simple template.\n *\n * @param {string} tmpl Template.\n * @param {Object} context Replacements object.\n * @param {Function} [filter] Value filter function.\n * @return {string}\n */\nfunction template(tmpl, context, filter) {\n\treturn tmpl.replace(/\\{([^}]+)}/g, function (m, key) {\n\t\tvar value = filter ? filter(context[key]) : context[key];\n\t\treturn value || '';\n\t});\n}\n\n/**\n * Generate BEM class names for a block or element.\n * Block name is fixed to the ${prefix} value.\n *\n * @param {string} [elem] Element name.\n * @param {string} [mod] Modifier.\n * @return {string}\n */\nfunction className(elem, mod) {\n\tvar base = _config.prefix + (elem ? '' + _config.elemDelimiter + elem : '');\n\treturn base + (mod ? ' ' + base + _config.modDelimiter + mod : '');\n}\n\n/**\n * Convert array like object to array.\n *\n * @param {Object} list Array like object.\n * @returns {Array}\n */\nfunction toArray(list) {\n\treturn Array.prototype.slice.call(list);\n}\n\n/**\n * Return SVG code of an icon.\n *\n * @param {string|string[]} paths SVG path of an icon.\n * @param {string} cls CSS class name.\n * @return {string}\n */\nfunction svg(paths, cls) {\n\tif (!Array.isArray(paths)) {\n\t\tpaths = [paths];\n\t}\n\tpaths = paths.map(function (p) {\n\t\treturn '<path d=\"' + p + '\"/>';\n\t});\n\treturn '\\n\\t\\t<svg class=\"' + cls + '\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n\\t\\t\\t' + paths.join('\\n') + '\\n\\t\\t</svg>\\n\\t';\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Prefix that is used to generate CSS class names, etc.\n *\n * @type {string}\n */\nvar prefix = exports.prefix = 'social-likes';\n\n/**\n * Delimiter that is used to separate element.\n *\n * @type {string}\n */\nvar elemDelimiter = exports.elemDelimiter = '__';\n\n/**\n * Delimiter that is used to separate modifier.\n *\n * @type {string}\n */\nvar modDelimiter = exports.modDelimiter = '_';","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _deepmerge = require('deepmerge');\n\nvar _deepmerge2 = _interopRequireDefault(_deepmerge);\n\nvar _config = require('./config');\n\nvar _util = require('./util');\n\nvar _services = require('./services');\n\nvar baseServices = _interopRequireWildcard(_services);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Merge base services with user services\nvar services = window.socialLikesButtons ? (0, _deepmerge2.default)(baseServices, window.socialLikesButtons) : baseServices;\n\n/**\n * A button.\n *\n * @param {HTMLElement} widget\n * @param {Object} options\n */\n\nvar Button = function () {\n\tfunction Button(widget, options) {\n\t\t_classCallCheck(this, Button);\n\n\t\tthis.widget = widget;\n\t\tthis.data = (0, _util.dataset)(widget);\n\t\tthis.options = (0, _deepmerge2.default)(options, this.data);\n\n\t\tthis.initService();\n\t\tif (this.service) {\n\t\t\tthis.initHtml();\n\t\t\tthis.initEvents();\n\t\t}\n\t\tif (!this.service && process.env.NODE_ENV === 'development') {\n\t\t\t/* eslint-disable no-console */\n\t\t\tconsole.error('Social Likes: service for widget \"' + (widget.className || this.options.service) + '\" not found.');\n\t\t\t/* eslint-enable no-console */\n\t\t}\n\t}\n\n\t/**\n  * Update options.\n  *\n  * @param {Object} options New options.\n  */\n\n\n\t_createClass(Button, [{\n\t\tkey: 'update',\n\t\tvalue: function update(options) {\n\t\t\tthis.options = (0, _deepmerge2.default)(this.options, options);\n\t\t}\n\n\t\t/**\n   * Read service name and apply its options.\n   * Service can be a class on the widget (.facebook) or `service` option.\n   */\n\n\t}, {\n\t\tkey: 'initService',\n\t\tvalue: function initService() {\n\t\t\tvar service = this.options.service;\n\t\t\tif (!service) {\n\t\t\t\t// class=\"facebook\"\n\t\t\t\tservice = (0, _util.toArray)(this.widget.classList).reduce(function (_, cls) {\n\t\t\t\t\tif (services[cls]) {\n\t\t\t\t\t\treturn cls;\n\t\t\t\t\t}\n\t\t\t\t}, null);\n\t\t\t\tif (!service) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.service = service;\n\t\t\tif (services[service]) {\n\t\t\t\tthis.options = (0, _deepmerge2.default)(this.options, services[service]);\n\t\t\t} else {\n\t\t\t\tthis.service = null;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Initialize markup of a button.\n   */\n\n\t}, {\n\t\tkey: 'initHtml',\n\t\tvalue: function initHtml() {\n\t\t\tvar _this = this;\n\n\t\t\tvar cx = function cx(name) {\n\t\t\t\treturn (0, _util.className)(name, _this.service);\n\t\t\t};\n\t\t\tvar widget = this.widget;\n\t\t\tvar options = this.options;\n\n\t\t\t// Remove existing class (.facebook) with a proper one\n\t\t\twidget.classList.remove(this.service);\n\t\t\tcx('widget').split(' ').forEach(function (cls) {\n\t\t\t\treturn widget.classList.add(cls);\n\t\t\t});\n\n\t\t\t// Button:\n\t\t\t// 1. Normal button with <button> tag.\n\t\t\t// 2. Link <a> if the service has the clickUrl option.\n\t\t\t// 3. Link <a> with .social-likes__invisible-button class if has clickUrl option but widget markup has no text.\n\t\t\t// 4. No button if there’s no text in the markup and no clickUrl option.\n\t\t\tvar buttonHtml = '';\n\t\t\tvar oldHtml = widget.innerHTML.trim();\n\t\t\tif (options.clickUrl || oldHtml) {\n\t\t\t\tvar buttonTag = 'div';\n\t\t\t\tvar buttonHref = '';\n\t\t\t\tvar buttonClasses = cx('button');\n\t\t\t\tif (options.clickUrl) {\n\t\t\t\t\tvar url = this.makeUrl(options.clickUrl);\n\t\t\t\t\tbuttonTag = 'a';\n\t\t\t\t\tbuttonHref = 'href=\"' + url + '\"';\n\t\t\t\t\tif (!oldHtml) {\n\t\t\t\t\t\tbuttonClasses = cx('invisible-button');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuttonHtml = '\\n\\t\\t\\t\\t<' + buttonTag + ' ' + buttonHref + ' class=\"' + buttonClasses + '\">\\n\\t\\t\\t\\t\\t' + oldHtml + '\\n\\t\\t\\t\\t</' + buttonTag + '>\\n\\t\\t\\t';\n\t\t\t} else {\n\t\t\t\twidget.classList.add((0, _util.className)('widget_notext'));\n\t\t\t}\n\n\t\t\t// Icon\n\t\t\tvar svgHtml = (0, _util.svg)(this.options.icon, cx('icon'));\n\n\t\t\twidget.innerHTML = svgHtml + buttonHtml;\n\t\t}\n\n\t\t/**\n   * Attach event handlers.\n   */\n\n\t}, {\n\t\tkey: 'initEvents',\n\t\tvalue: function initEvents() {\n\t\t\tif (!this.options.clickUrl) {\n\t\t\t\tthis.widget.addEventListener('click', this.onClick.bind(this));\n\t\t\t\tthis.widget.addEventListener('keydown', this.onKeyDown.bind(this));\n\t\t\t\tthis.widget.setAttribute('tabindex', '0');\n\t\t\t\tthis.widget.setAttribute('role', 'button');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Replace URL and title in an URL template.\n   *\n   * @param {string} urlTemplate URL template.\n   * @return {string}\n   */\n\n\t}, {\n\t\tkey: 'makeUrl',\n\t\tvalue: function makeUrl(urlTemplate) {\n\t\t\treturn (0, _util.makeUrl)(urlTemplate, {\n\t\t\t\turl: this.options.url,\n\t\t\t\ttitle: this.options.title\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'makeUrlWithParams',\n\t\tvalue: function makeUrlWithParams(urlTemplate) {\n\t\t\tvar url = this.makeUrl(urlTemplate);\n\t\t\tvar params = (0, _deepmerge2.default)(this.data, this.options.data || {});\n\t\t\treturn (0, _util.addParamsToUrl)(url, params, ['service', 'title', 'url']);\n\t\t}\n\n\t\t/**\n   * Button click handler.\n   *\n   * @param {Event} event Event.\n   */\n\n\t}, {\n\t\tkey: 'onClick',\n\t\tvalue: function onClick(event) {\n\t\t\tvar options = this.options;\n\t\t\tvar ok = true;\n\t\t\tif (typeof options.click === 'function') {\n\t\t\t\tok = options.click.call(this, event);\n\t\t\t}\n\t\t\tif (ok) {\n\t\t\t\tvar url = this.makeUrlWithParams(options.popupUrl);\n\t\t\t\t(0, _util.openPopup)(url, {\n\t\t\t\t\twidth: options.popupWidth,\n\t\t\t\t\theight: options.popupHeight,\n\t\t\t\t\tname: _config.prefix + '_' + this.service\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'onKeyDown',\n\t\tvalue: function onKeyDown(event) {\n\t\t\tif (event.which === 13 || event.which === 32) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.onClick(event);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Button;\n}();\n\nexports.default = Button;"],"sourceRoot":""}