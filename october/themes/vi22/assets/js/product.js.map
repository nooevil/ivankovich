{"version":3,"sources":["webpack:///./themes/lovata-shopaholic-sneakers/partials/product/product-description/product-description.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/product/product-slider/product-slider.js","webpack:///./node_modules/vanilla-lazyload/dist/lazyload.js","webpack:///./node_modules/@lovata/popup-helper/popup-helper.js","webpack:///./node_modules/tabbable/index.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/common/custom-swiper/custom-swiper.js","webpack:///./themes/lovata-shopaholic-sneakers/js/lazy-load.js","webpack:///./node_modules/@lovata/shopaholic-wish-list/shopaholic-remove-wish-list.js","webpack:///./node_modules/@lovata/shopaholic-cart/shopaholic-cart-position.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/product/relative-product-slider/relative-product-slider.js","webpack:///./node_modules/@lovata/shopaholic-cart/shopaholic-cart-shipping-type.js","webpack:///./node_modules/@lovata/shopaholic-cart/shopaholic-cart-add.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/content/review/review-list/review-list.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/content/review/review-add/review-add.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/product/product-info/product-info.js","webpack:///./node_modules/focus-trap/index.js","webpack:///./themes/lovata-shopaholic-sneakers/partials/product/wish-list/wish-list-add/wish-list-add.js","webpack:///./node_modules/@lovata/shopaholic-wish-list/shopaholic-add-wish-list.js","webpack:///./node_modules/@lovata/shopaholic-cart/shopaholic-cart.js"],"names":["$","constructor","this","linkTabSelector","activeLinkTabSelector","contentSelector","invisibleContentSelector","init","document","on","e","preventDefault","target","hasClass","showTab","hideTab","tabCollection","tabContentCollection","forEach","tab","removeClass","el","addClass","id","attr","tabContent","_common_custom_swiper_custom_swiper__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","sliderContainerSelector","paginationSelector","bulletSelector","activeBulletSelector","navSliderContainerSelector","navSliderContainerHiddenSelector","mqString","delay","handler","querySelector","addEventListener","changeNavVisibility","window","initNavSlider","productMainSlider","Swiper","slidesPerView","watchOverflow","watchSlidesVisibility","watchSlidesProgress","observer","pagination","type","bulletClass","bulletActiveClass","loop","thumbs","swiper","productNavSlider","controller","control","checkViewport","spaceBetween","productSlider","matchMedia","matches","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_typeof","obj","Symbol","iterator","runningOnBrowser","isBot","navigator","test","userAgent","supportsIntersectionObserver","supportsClassList","createElement","defaultSettings","elements_selector","container","threshold","thresholds","data_src","data_srcset","data_sizes","data_bg","class_loading","class_loaded","class_error","load_delay","auto_unobserve","callback_enter","callback_exit","callback_reveal","callback_loaded","callback_error","callback_finish","getData","element","attribute","getAttribute","setData","value","attrName","setAttribute","removeAttribute","getWasProcessedData","setTimeoutData","getTimeoutData","createInstance","classObj","options","event","instance","CustomEvent","detail","err","createEvent","initCustomEvent","dispatchEvent","callbackIfSet","callback","argument","updateLoadingCount","plusMinus","_loadingCount","_elements","_settings","getSourceTags","parentTag","childTag","sourceTags","children","tagName","push","setAttributeIfValue","setImageAttributes","settings","setSourcesFunctions","IMG","parent","parentNode","sourceTag","IFRAME","VIDEO","load","setSources","elements","elementToPurge","setSourcesFunction","filter","srcDataValue","bgDataValue","style","backgroundImage","concat","setSourcesBgImage","className","classList","add","eventName","removeEventListener","removeEventListeners","loadHandler","errorHandler","eventHandler","success","remove","replace","RegExp","addOneShotEventListeners","addEventListeners","managedTags","revealAndUnobserve","_observer","revealElement","unobserve","cancelDelayLoad","timeoutId","clearTimeout","delayLoad","loadDelay","setTimeout","force","indexOf","setWasProcessedData","callback_set","setObserver","IntersectionObserver","entries","entry","isIntersecting","intersectionRatio","onEnter","onExit","root","rootMargin","LazyLoad","customSettings","getInstanceSettings","update","_this","querySelectorAll","purgeProcessedElements","Array","slice","observe","loadAll","destroy","_this2","_this3","optionsItem","autoInitialize","lazyLoadOptions","exports","module","undefined","focus_trap__WEBPACK_IMPORTED_MODULE_0__","focus_trap__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","[object Object]","noScrollSelector","overlaySelector","bodyPaddingProp","openModalStateAttr","pageOffset","cssClass","pageYOffset","scrollTo","needScroll","body","setScrollPosition","saveScrollPosition","setBodyPadding","needTrap","modal","focusTrap","clickOutsideDeactivates","activate","deactivate","innerWidth","clientWidth","scrollWidth","getScrollBarWidth","setProperty","getOverlay","needOverlay","createOverlay","removeOverlay","isInit","closeBtnNode","modalNode","overlayController","overlayClickHandler","escPressHandler","checkOverlay","div","append","triggerTarget","overlay","click","which","hasAttribute","candidateSelectors","candidateSelector","join","Element","msMatchesSelector","webkitMatchesSelector","tabbable","candidate","candidateTabindex","regularTabbables","orderedTabbables","untouchabilityChecker","UntouchabilityChecker","ownerDocument","candidates","includeContainer","unshift","isNodeMatchingSelectorTabbable","getTabindex","documentOrder","tabIndex","node","sort","sortOrderedTabbables","map","a","isNodeMatchingSelectorFocusable","isInput","isRadio","name","checked","nodes","getCheckedRadio","isTabbableRadio","isNonTabbableRadio","disabled","isHiddenInput","isUntouchable","isTabbable","Error","isFocusable","focusableCandidateSelector","tabindexAttr","parseInt","isNaN","contentEditable","isContentEditable","b","elementDocument","doc","cache","hasDisplayNone","nodeComputedStyle","nodeType","Node","ELEMENT_NODE","cached","list","predicate","find","item","result","defaultView","getComputedStyle","display","documentElement","computedStyle","visibility","activeElement","blur","nodeName","getElementById","initEvent","childNodes","getElementsByTagName","location","hash","win","history","getPropertyValue","Image","Date","screen","Dom7","arr","self","selector","context","els","tempParent","html","trim","toCreate","innerHTML","match","split","unique","uniqueArray","fn","Class","Methods","classes","j","contains","toggleClass","toggle","attrs","removeAttr","data","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","args","eventType","targetSelector","listener","capture","handleLiveEvent","eventData","dom7EventData","is","parents","k","handleEvent","events","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","splice","dom7proxy","trigger","evt","bubbles","cancelable","dataIndex","transitionEnd","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","index","child","previousSibling","eq","returnIndex","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","closest","foundElements","found","removeChild","toAdd","keys","methodName","Utils","object","nextTick","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","SwiperClass","eventsListeners","priority","method","onceHandler","f7proxy","isArray","instanceParams","modules","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","proto","static","install","m","installModule","updateSize","width","height","$el","clientHeight","isHorizontal","isVertical","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","checkOverflow","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_transition","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","Mousewheel","lastScrollTime","isSupported","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","returnValue","eventsTarged","handleMouseEnter","handleMouseLeave","handle","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","hideOnClick","hiddenClass","isHidden","Pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","number","render","Controller","LinearSpline","binarySearch","maxIndex","minIndex","guess","array","i1","i3","interpolate","x2","c","spline","controlled","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","keyCode","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","a11y$1","notificationClass","updateNavigation","updatePagination","Thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","d","custom_swiper_CustomSwiper","A11y","CustomSwiper","vanilla_lazyload_dist_lazyload__WEBPACK_IMPORTED_MODULE_0__","vanilla_lazyload_dist_lazyload__WEBPACK_IMPORTED_MODULE_0___default","lazySelector","finishSelector","initLazyLoad","myLazyLoad","parentElement","ShopaholicRemoveWishList","sDefaultButtonClass","sButtonSelector","sDefaultWrapperClass","sWrapperSelector","sAttributeName","sComponentMethod","obAjaxRequestCallback","obEvent","obButton","currentTarget","iProductID","getProductID","sendAjaxRequest","obRequestData","product_id","request","obCallback","sSelector","ShopaholicCartPosition","sPositionIDAttr","sOfferIDAttr","sQuantityAttr","obProductCart","iPositionID","iOfferID","iQuantity","obProperty","iRadix","referenceType","initOfferID","initQuantity","initCartPositionID","obData","offer_id","quantity","property","createCustomEvent","obOfferIDNodeCollection","getOfferIDInputType","obOfferIDNode","firstNode","sType","obQuantityInput","getQuantityInput","sValue","sectionSelector","nextElBtnSelector","prevElBtnSelector","initSlider","wrapper","RelativeSlider","769","ShopaholicCartShippingType","_lovata_shopaholic_cart_shopaholic_cart__WEBPACK_IMPORTED_MODULE_0__","sDefaultInputName","obInput","shipping_type_id","getShippingTypeID","responseJSON","completeCallback","iShippingTypeID","obInputList","getInputType","obInputNode","obResponse","obCartData","updateCartData","ShopaholicCartAdd","_lovata_shopaholic_cart_shopaholic_cart_position__WEBPACK_IMPORTED_MODULE_0__","_lovata_shopaholic_cart_shopaholic_cart__WEBPACK_IMPORTED_MODULE_1__","_lovata_shopaholic_cart_shopaholic_cart_shipping_type__WEBPACK_IMPORTED_MODULE_2__","sAddComponentMethod","sUpdateComponentMethod","bForceAddMethod","obPositionData","obShippingType","obOfferProperty","iCartQuantity","getOfferQuantity","cart","ajaxHandler","sButtonClass","sListWrapper","preloaderSelector","iNextPage","iMaxPage","sendAjax","page","content/review/review-list/review-list-ajax","loading","_lovata_popup_helper__WEBPACK_IMPORTED_MODULE_0__","drawerOpenNavSelector","drawerNavSelector","drawerContainerSelector","modalContentWrapperSelector","drawerBtnSelector","drawerCloseBtnSelector","duplicateCloseSelector","linkSelector","submitSelector","formSelector","invalidSelector","labelSelector","preHoverLabelSelector","afterHoverLabelSelector","preCheckedLabelSelector","inputSelector","tooltipSelector","tooltipVisibleSelector","preLoaderSelector","scrollDuration","messageClearDelay","isLoad","chooseRating","ready","btn","loadPopupContent","togglePopup","timer","hideTooltip","form","res","completeHandler","setRating","response","status","content/review/review-add/review-add-success","showTooltip","form/review-form/review-form","eventObject","popup","isOpen","Helper","setBodyScrollState","overlayHandler","focusTrapManager","scrollDistance","animate","_ref","indicateInterval","clearRating","prevElm","nextElm","radioCollection","_lovata_shopaholic_cart_shopaholic_cart_add__WEBPACK_IMPORTED_MODULE_0__","detailSelector","detailOpenSelector","textSelector","textHiddenSelector","sMiniCartWrapper","preLoaderClass","wrapperSelector","obShopaholicCartAdd","initAddCart","siblings","setAjaxRequestCallback","tooltip","product/cart/cart-mini/cart-info/cart-info","_ref2","trapQueue","xtend","activeFocusTraps","activateTrap","trap","activeTrap","pause","trapIndex","deactivateTrap","unpause","userOptions","config","returnFocusOnDeactivate","escapeDeactivates","state","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","activateOptions","updateTabbableNodes","onActivate","addListeners","removeListeners","deactivateOptions","onDeactivate","returnFocus","tryFocus","getInitialFocusNode","checkFocusIn","checkPointerDown","checkClick","checkKey","getNodeForOption","optionName","optionValue","Document","isEscapeEvent","isTabEvent","shiftKey","checkTab","tabbableNodes","focus","select","isSelectableInput","_lovata_shopaholic_wish_list_shopaholic_add_wish_list__WEBPACK_IMPORTED_MODULE_0__","_lovata_shopaholic_wish_list_shopaholic_remove_wish_list__WEBPACK_IMPORTED_MODULE_1__","iconClass","iconSelector","sWishListInfoWrapper","isFavoriteSelector","obAddHelper","ShopaholicAddWishList","obRemoveHelper","initAddHandler","initRemoveHandler","product/wish-list/wish-list-info/wish-list-info","ShopaholicCart","sOfferItemType","sGetDataHandler","sNodeClass","sOldPriceClass","sHideOldPriceClass","sGroupAttribute","sFieldAttribute","renderPriceFields","obCartPosition","findCartPositionByOfferID","sField","findCartPositionByID","sGroup","iItemID","sItemType","obPosition","obPositionList","arCartPositionIDList","iKey","obPositionItem","item_id","item_type","JSON","stringify","obNodeList","obPriceNode","sGroupOriginal","sFieldOriginal","sNewValue","getPositionID","getOfferPositionField","processPositionOldPriceField","getField","processOldPriceField","obOldPriceNodeList","getNode","fDiscountPrice","obOldPriceNode"],"mappings":"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","file":"/js/product.js","sourcesContent":["export default new class ProductTab {\n  constructor() {\n    this.linkTabSelector = 'product-descr__link';\n    this.activeLinkTabSelector = 'product-descr__link_active';\n    this.contentSelector = 'product-descr__content';\n    this.invisibleContentSelector = 'product-descr__content_visually-hidden';\n\n    this.init();\n  }\n\n  init() {\n    $(document).on('click', `.${this.linkTabSelector}`, (e) => {\n      e.preventDefault();\n\n      const { target } = e;\n\n      if ($(target).hasClass(this.activeLinkTabSelector)) return;\n\n      this.showTab(target);\n    });\n  }\n\n  hideTab() {\n    const tabCollection = $(`.${this.linkTabSelector}`);\n    const tabContentCollection = $(`.${this.contentSelector}`);\n\n    [...tabCollection].forEach(tab => $(tab).removeClass(this.activeLinkTabSelector));\n    [...tabContentCollection].forEach(el => $(el).addClass(this.invisibleContentSelector));\n  }\n\n  showTab(target) {\n    const id = $(target).attr('href');\n    const tabContent = $(id);\n\n    this.hideTab();\n\n    $(target).addClass(this.activeLinkTabSelector);\n\n    tabContent.removeClass(this.invisibleContentSelector);\n  }\n}();\n","import Swiper from '../../common/custom-swiper/custom-swiper';\n\nexport default new class productSlider {\n  constructor() {\n    this.sliderContainerSelector = 'product-slider__container';\n    this.paginationSelector = 'product-slider__pagination';\n    this.bulletSelector = 'product-slider__bullet';\n    this.activeBulletSelector = 'product-slider__bullet_active';\n\n    this.navSliderContainerSelector = 'product-nav-slider';\n    this.navSliderContainerHiddenSelector = 'product-nav-slider_visually-hidden';\n\n    this.mqString = '(min-width: 769px)';\n    this.delay = 200;\n\n    this.handler();\n  }\n\n  handler() {\n    const slider = document.querySelector(`.${this.sliderContainerSelector}`);\n\n    if (!slider) return;\n\n    document.addEventListener('DOMContentLoaded', () => {\n      this.changeNavVisibility();\n      this.init();\n    });\n\n    window.addEventListener('resize', () => {\n      this.changeNavVisibility();\n    });\n  }\n\n  init() {\n    const el = `.${this.paginationSelector}`;\n    this.initNavSlider();\n\n    this.productMainSlider = new Swiper(`.${this.sliderContainerSelector}`, {\n      slidesPerView: 1,\n      watchOverflow: true,\n      watchSlidesVisibility: true,\n      watchSlidesProgress: true,\n      observer: true,\n      pagination: {\n        el,\n        type: 'bullets',\n        bulletClass: this.bulletSelector,\n        bulletActiveClass: this.activeBulletSelector,\n      },\n      loop: false,\n      thumbs: {\n        swiper: this.productNavSlider,\n      },\n      controller: {\n        control: this.productNavSlider,\n      },\n    });\n  }\n\n  changeNavVisibility() {\n    const vpState = this.checkViewport();\n\n    if (vpState) {\n      $(`.${this.navSliderContainerSelector}`).removeClass(this.navSliderContainerHiddenSelector);\n    } else {\n      $(`.${this.navSliderContainerSelector}`).addClass(this.navSliderContainerHiddenSelector);\n    }\n  }\n\n  initNavSlider() {\n    this.productNavSlider = new Swiper(`.${this.navSliderContainerSelector}`, {\n      slidesPerView: 7,\n      spaceBetween: 15,\n      watchOverflow: true,\n      observer: true,\n      watchSlidesVisibility: true,\n      watchSlidesProgress: true,\n      controller: {\n        control: this.productSlider,\n      },\n    });\n  }\n\n  checkViewport() {\n    return window.matchMedia(this.mqString).matches;\n  }\n}();\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.LazyLoad = factory();\n})(this, function () {\n  'use strict';\n\n  var runningOnBrowser = typeof window !== \"undefined\";\n  var isBot = runningOnBrowser && !(\"onscroll\" in window) || typeof navigator !== \"undefined\" && /(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent);\n  var supportsIntersectionObserver = runningOnBrowser && \"IntersectionObserver\" in window;\n  var supportsClassList = runningOnBrowser && \"classList\" in document.createElement(\"p\");\n  var defaultSettings = {\n    elements_selector: \"img\",\n    container: isBot || runningOnBrowser ? document : null,\n    threshold: 300,\n    thresholds: null,\n    data_src: \"src\",\n    data_srcset: \"srcset\",\n    data_sizes: \"sizes\",\n    data_bg: \"bg\",\n    class_loading: \"loading\",\n    class_loaded: \"loaded\",\n    class_error: \"error\",\n    load_delay: 0,\n    auto_unobserve: true,\n    callback_enter: null,\n    callback_exit: null,\n    callback_reveal: null,\n    callback_loaded: null,\n    callback_error: null,\n    callback_finish: null\n  };\n\n  var getInstanceSettings = function getInstanceSettings(customSettings) {\n    return _extends({}, defaultSettings, customSettings);\n  };\n\n  var dataPrefix = \"data-\";\n  var processedDataName = \"was-processed\";\n  var timeoutDataName = \"ll-timeout\";\n  var trueString = \"true\";\n\n  var getData = function getData(element, attribute) {\n    return element.getAttribute(dataPrefix + attribute);\n  };\n\n  var setData = function setData(element, attribute, value) {\n    var attrName = dataPrefix + attribute;\n\n    if (value === null) {\n      element.removeAttribute(attrName);\n      return;\n    }\n\n    element.setAttribute(attrName, value);\n  };\n\n  var setWasProcessedData = function setWasProcessedData(element) {\n    return setData(element, processedDataName, trueString);\n  };\n\n  var getWasProcessedData = function getWasProcessedData(element) {\n    return getData(element, processedDataName) === trueString;\n  };\n\n  var setTimeoutData = function setTimeoutData(element, value) {\n    return setData(element, timeoutDataName, value);\n  };\n\n  var getTimeoutData = function getTimeoutData(element) {\n    return getData(element, timeoutDataName);\n  };\n\n  var purgeProcessedElements = function purgeProcessedElements(elements) {\n    return elements.filter(function (element) {\n      return !getWasProcessedData(element);\n    });\n  };\n\n  var purgeOneElement = function purgeOneElement(elements, elementToPurge) {\n    return elements.filter(function (element) {\n      return element !== elementToPurge;\n    });\n  };\n  /* Creates instance and notifies it through the window element */\n\n\n  var createInstance = function createInstance(classObj, options) {\n    var event;\n    var eventString = \"LazyLoad::Initialized\";\n    var instance = new classObj(options);\n\n    try {\n      // Works in modern browsers\n      event = new CustomEvent(eventString, {\n        detail: {\n          instance: instance\n        }\n      });\n    } catch (err) {\n      // Works in Internet Explorer (all versions)\n      event = document.createEvent(\"CustomEvent\");\n      event.initCustomEvent(eventString, false, false, {\n        instance: instance\n      });\n    }\n\n    window.dispatchEvent(event);\n  };\n  /* Auto initialization of one or more instances of lazyload, depending on the \n      options passed in (plain object or an array) */\n\n\n  function autoInitialize(classObj, options) {\n    if (!options) {\n      return;\n    }\n\n    if (!options.length) {\n      // Plain object\n      createInstance(classObj, options);\n    } else {\n      // Array of objects\n      for (var i = 0, optionsItem; optionsItem = options[i]; i += 1) {\n        createInstance(classObj, optionsItem);\n      }\n    }\n  }\n\n  var callbackIfSet = function callbackIfSet(callback, argument) {\n    if (callback) {\n      callback(argument);\n    }\n  };\n\n  var updateLoadingCount = function updateLoadingCount(instance, plusMinus) {\n    instance._loadingCount += plusMinus;\n\n    if (instance._elements.length === 0 && instance._loadingCount === 0) {\n      callbackIfSet(instance._settings.callback_finish);\n    }\n  };\n\n  var getSourceTags = function getSourceTags(parentTag) {\n    var sourceTags = [];\n\n    for (var i = 0, childTag; childTag = parentTag.children[i]; i += 1) {\n      if (childTag.tagName === \"SOURCE\") {\n        sourceTags.push(childTag);\n      }\n    }\n\n    return sourceTags;\n  };\n\n  var setAttributeIfValue = function setAttributeIfValue(element, attrName, value) {\n    if (!value) {\n      return;\n    }\n\n    element.setAttribute(attrName, value);\n  };\n\n  var setImageAttributes = function setImageAttributes(element, settings) {\n    setAttributeIfValue(element, \"sizes\", getData(element, settings.data_sizes));\n    setAttributeIfValue(element, \"srcset\", getData(element, settings.data_srcset));\n    setAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n  };\n\n  var setSourcesImg = function setSourcesImg(element, settings) {\n    var parent = element.parentNode;\n\n    if (parent && parent.tagName === \"PICTURE\") {\n      var sourceTags = getSourceTags(parent);\n      sourceTags.forEach(function (sourceTag) {\n        setImageAttributes(sourceTag, settings);\n      });\n    }\n\n    setImageAttributes(element, settings);\n  };\n\n  var setSourcesIframe = function setSourcesIframe(element, settings) {\n    setAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n  };\n\n  var setSourcesVideo = function setSourcesVideo(element, settings) {\n    var sourceTags = getSourceTags(element);\n    sourceTags.forEach(function (sourceTag) {\n      setAttributeIfValue(sourceTag, \"src\", getData(sourceTag, settings.data_src));\n    });\n    setAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n    element.load();\n  };\n\n  var setSourcesBgImage = function setSourcesBgImage(element, settings) {\n    var srcDataValue = getData(element, settings.data_src);\n    var bgDataValue = getData(element, settings.data_bg);\n\n    if (srcDataValue) {\n      element.style.backgroundImage = \"url(\\\"\".concat(srcDataValue, \"\\\")\");\n    }\n\n    if (bgDataValue) {\n      element.style.backgroundImage = bgDataValue;\n    }\n  };\n\n  var setSourcesFunctions = {\n    IMG: setSourcesImg,\n    IFRAME: setSourcesIframe,\n    VIDEO: setSourcesVideo\n  };\n\n  var setSources = function setSources(element, instance) {\n    var settings = instance._settings;\n    var tagName = element.tagName;\n    var setSourcesFunction = setSourcesFunctions[tagName];\n\n    if (setSourcesFunction) {\n      setSourcesFunction(element, settings);\n      updateLoadingCount(instance, 1);\n      instance._elements = purgeOneElement(instance._elements, element);\n      return;\n    }\n\n    setSourcesBgImage(element, settings);\n  };\n\n  var addClass = function addClass(element, className) {\n    if (supportsClassList) {\n      element.classList.add(className);\n      return;\n    }\n\n    element.className += (element.className ? \" \" : \"\") + className;\n  };\n\n  var removeClass = function removeClass(element, className) {\n    if (supportsClassList) {\n      element.classList.remove(className);\n      return;\n    }\n\n    element.className = element.className.replace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n  };\n\n  var genericLoadEventName = \"load\";\n  var mediaLoadEventName = \"loadeddata\";\n  var errorEventName = \"error\";\n\n  var addEventListener = function addEventListener(element, eventName, handler) {\n    element.addEventListener(eventName, handler);\n  };\n\n  var removeEventListener = function removeEventListener(element, eventName, handler) {\n    element.removeEventListener(eventName, handler);\n  };\n\n  var addEventListeners = function addEventListeners(element, loadHandler, errorHandler) {\n    addEventListener(element, genericLoadEventName, loadHandler);\n    addEventListener(element, mediaLoadEventName, loadHandler);\n    addEventListener(element, errorEventName, errorHandler);\n  };\n\n  var removeEventListeners = function removeEventListeners(element, loadHandler, errorHandler) {\n    removeEventListener(element, genericLoadEventName, loadHandler);\n    removeEventListener(element, mediaLoadEventName, loadHandler);\n    removeEventListener(element, errorEventName, errorHandler);\n  };\n\n  var eventHandler = function eventHandler(event, success, instance) {\n    var settings = instance._settings;\n    var className = success ? settings.class_loaded : settings.class_error;\n    var callback = success ? settings.callback_loaded : settings.callback_error;\n    var element = event.target;\n    removeClass(element, settings.class_loading);\n    addClass(element, className);\n    callbackIfSet(callback, element);\n    updateLoadingCount(instance, -1);\n  };\n\n  var addOneShotEventListeners = function addOneShotEventListeners(element, instance) {\n    var loadHandler = function loadHandler(event) {\n      eventHandler(event, true, instance);\n      removeEventListeners(element, loadHandler, errorHandler);\n    };\n\n    var errorHandler = function errorHandler(event) {\n      eventHandler(event, false, instance);\n      removeEventListeners(element, loadHandler, errorHandler);\n    };\n\n    addEventListeners(element, loadHandler, errorHandler);\n  };\n\n  var managedTags = [\"IMG\", \"IFRAME\", \"VIDEO\"];\n\n  var onEnter = function onEnter(element, instance) {\n    var settings = instance._settings;\n    callbackIfSet(settings.callback_enter, element);\n\n    if (!settings.load_delay) {\n      revealAndUnobserve(element, instance);\n      return;\n    }\n\n    delayLoad(element, instance);\n  };\n\n  var revealAndUnobserve = function revealAndUnobserve(element, instance) {\n    var observer = instance._observer;\n    revealElement(element, instance);\n\n    if (observer && instance._settings.auto_unobserve) {\n      observer.unobserve(element);\n    }\n  };\n\n  var onExit = function onExit(element, instance) {\n    var settings = instance._settings;\n    callbackIfSet(settings.callback_exit, element);\n\n    if (!settings.load_delay) {\n      return;\n    }\n\n    cancelDelayLoad(element);\n  };\n\n  var cancelDelayLoad = function cancelDelayLoad(element) {\n    var timeoutId = getTimeoutData(element);\n\n    if (!timeoutId) {\n      return; // do nothing if timeout doesn't exist\n    }\n\n    clearTimeout(timeoutId);\n    setTimeoutData(element, null);\n  };\n\n  var delayLoad = function delayLoad(element, instance) {\n    var loadDelay = instance._settings.load_delay;\n    var timeoutId = getTimeoutData(element);\n\n    if (timeoutId) {\n      return; // do nothing if timeout already set\n    }\n\n    timeoutId = setTimeout(function () {\n      revealAndUnobserve(element, instance);\n      cancelDelayLoad(element);\n    }, loadDelay);\n    setTimeoutData(element, timeoutId);\n  };\n\n  var revealElement = function revealElement(element, instance, force) {\n    var settings = instance._settings;\n\n    if (!force && getWasProcessedData(element)) {\n      return; // element has already been processed and force wasn't true\n    }\n\n    if (managedTags.indexOf(element.tagName) > -1) {\n      addOneShotEventListeners(element, instance);\n      addClass(element, settings.class_loading);\n    }\n\n    setSources(element, instance);\n    setWasProcessedData(element);\n    callbackIfSet(settings.callback_reveal, element);\n    callbackIfSet(settings.callback_set, element);\n  };\n\n  var isIntersecting = function isIntersecting(entry) {\n    return entry.isIntersecting || entry.intersectionRatio > 0;\n  };\n\n  var getObserverSettings = function getObserverSettings(settings) {\n    return {\n      root: settings.container === document ? null : settings.container,\n      rootMargin: settings.thresholds || settings.threshold + \"px\"\n    };\n  };\n\n  var setObserver = function setObserver(instance) {\n    if (!supportsIntersectionObserver) {\n      return false;\n    }\n\n    instance._observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        return isIntersecting(entry) ? onEnter(entry.target, instance) : onExit(entry.target, instance);\n      });\n    }, getObserverSettings(instance._settings));\n    return true;\n  };\n\n  var LazyLoad = function LazyLoad(customSettings, elements) {\n    this._settings = getInstanceSettings(customSettings);\n    this._loadingCount = 0;\n    setObserver(this);\n    this.update(elements);\n  };\n\n  LazyLoad.prototype = {\n    update: function update(elements) {\n      var _this = this;\n\n      var settings = this._settings;\n\n      var _elements = elements || settings.container.querySelectorAll(settings.elements_selector);\n\n      this._elements = purgeProcessedElements(Array.prototype.slice.call(_elements) // NOTE: nodeset to array for IE compatibility\n      );\n\n      if (isBot || !this._observer) {\n        this.loadAll();\n        return;\n      }\n\n      this._elements.forEach(function (element) {\n        _this._observer.observe(element);\n      });\n    },\n    destroy: function destroy() {\n      var _this2 = this;\n\n      if (this._observer) {\n        this._elements.forEach(function (element) {\n          _this2._observer.unobserve(element);\n        });\n\n        this._observer = null;\n      }\n\n      this._elements = null;\n      this._settings = null;\n    },\n    load: function load(element, force) {\n      revealElement(element, this, force);\n    },\n    loadAll: function loadAll() {\n      var _this3 = this;\n\n      var elements = this._elements;\n      elements.forEach(function (element) {\n        revealAndUnobserve(element, _this3);\n      });\n    }\n  };\n  /* Automatic instances creation if required (useful for async script loading) */\n\n  if (runningOnBrowser) {\n    autoInitialize(LazyLoad, window.lazyLoadOptions);\n  }\n\n  return LazyLoad;\n});","/**\n * @author  Uladzimir Ambrazhei, v.ambrazhey@lovata.com, LOVATA Group\n */\n\nimport createFocusTrap from 'focus-trap';\n\nexport default new class popupHelper {\n  constructor() {\n    this.noScrollSelector = '_noscroll';\n    this.overlaySelector = 'overlay';\n\n    this.bodyPaddingProp = '--body-padding';\n\n    this.openModalStateAttr = 'data-modal-open';\n    this.pageOffset = '';\n  }\n\n  /**\n   * @param {string} cssClass\n   * @description Set custom css class for 'body';\n   */\n\n  changeNoScrollSelector(cssClass) {\n    this.noScrollSelector = cssClass;\n  }\n\n   /**\n   * Return scroll position\n   */\n  saveScrollPosition() {\n    this.pageOffset = window.pageYOffset;\n    window.scrollTo(null, this.pageOffset);\n  }\n\n   /**\n   * Save scroll position before modal opening\n   */\n  setScrollPosition() {\n    window.scrollTo(null, this.pageOffset);\n  }\n\n  /**\n   * @description Complex method. Depending  @param needScroll toggle class on body, \n   * save or set scroll position and padding to avoid shifting content \n   * @param {boolean}  \n   */\n  setBodyScrollState(needScroll) {\n    const body = document.querySelector('body');\n\n    if (needScroll) {\n      body.classList.remove(this.noScrollSelector);\n\n      this.setScrollPosition();\n    } else {\n      this.saveScrollPosition();\n      this.setScrollPosition();\n      this.setBodyPadding();\n      body.classList.add(this.noScrollSelector);\n    }\n  }\n\n  /**\n   * @param {boolena} needTrap if true - enable focus trap\n   * @param {node} modal node of modal window\n   */\n  focusTrapManager(needTrap, modal) {\n    if (needTrap) {\n      this.focusTrap = createFocusTrap(modal, {\n        clickOutsideDeactivates: true,\n      });\n      this.focusTrap.activate();\n    } else {\n      this.focusTrap.deactivate();\n    }\n  }\n\n  /**\n   * @static\n   * @returns scrollBar width\n   */\n  static getScrollBarWidth() {\n    return window.innerWidth - document.body.clientWidth;\n  }\n\n  /**\n   * @description Set css custom-property equal scrollbar width\n   */\n\n  setBodyPadding() {\n    const scrollWidth = this.constructor.getScrollBarWidth();\n    document.body.style.setProperty(this.bodyPaddingProp, `${scrollWidth}px`);\n  }\n    \n  /**\n   * @description Return false if overlay was create\n   * @return {boolean} \n   */\n\n  checkOverlay() {\n    const overlay = this.getOverlay();\n    return !!overlay;\n  }\n  \n  /**\n   * @param {boolean} needOverlay \n   * @description if @param needOverlay is true create Node for overlay, else remove it\n   */\n\n  overlayController(needOverlay) {\n    if (needOverlay) {\n      this.createOverlay();\n    } else {\n      this.removeOverlay();\n    }\n  }\n\n  /**\n   * @param {boolean} isInit \n   * @param {node} closeBtnNode \n   * @param {node} modalNode \n   * @description Complex method. Create of remove overlay and if @param isInit is true, so set flags and `click` and `esc button press` handlers\n   */\n\n  overlayHandler(isInit, closeBtnNode, modalNode) {\n    this.overlayController(isInit);\n\n    if (isInit) {\n      modalNode.setAttribute(this.openModalStateAttr, true);\n      this.overlayClickHandler(closeBtnNode);\n      this.escPressHandler(closeBtnNode, modalNode);\n    }\n  }\n\n  /**\n   * @description Create overlay node\n   */\n  createOverlay() {\n    if (this.checkOverlay()) return;\n\n    const div = document.createElement('div');\n    const body = document.querySelector('body');\n    div.classList.add(this.overlaySelector);\n\n    body.append(div);\n  }\n  \n  /**\n   * @description Remove overlay node\n   */\n  removeOverlay() {\n    if (!this.checkOverlay()) return;\n\n    document.querySelector(`.${this.overlaySelector}`).remove();\n  }\n\n  /**\n   * @returns overlay node\n   */\n  getOverlay() {\n    return document.querySelector(`.${this.overlaySelector}`);\n  }\n\n  /**\n   * @param {node} triggerTarget Node for close modal window\n   * @description Add 'click' handler to overlay \n   */\n  overlayClickHandler(triggerTarget) {\n    const overlay = this.getOverlay();\n\n    if (!overlay) return;\n\n    overlay.addEventListener('click', () => {\n      triggerTarget.click();\n    });\n  }\n  \n  /**\n   * @param {node} triggerTarget Node for close modal window\n   * @param {node} modalNode  Node of modal window\n   * @description  Add esc button handler\n   */\n  escPressHandler(triggerTarget, modalNode) {\n    if (!triggerTarget || !modalNode) return;\n\n    document.addEventListener('keydown', ({ which }) => {\n      if (!this.checkOverlay()) return;\n\n      if (which === 27 && modalNode.hasAttribute(this.openModalStateAttr)) {\n        const overlay = this.getOverlay();\n        overlay.click();\n      }\n    });\n  }\n}();\n","var candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\nvar candidateSelector = candidateSelectors.join(',');\n\nvar matches = typeof Element === 'undefined'\n  ? function () {}\n  : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nfunction tabbable(el, options) {\n  options = options || {};\n\n  var elementDocument = el.ownerDocument || el;\n  var regularTabbables = [];\n  var orderedTabbables = [];\n\n  var untouchabilityChecker = new UntouchabilityChecker(elementDocument);\n  var candidates = el.querySelectorAll(candidateSelector);\n\n  if (options.includeContainer) {\n    if (matches.call(el, candidateSelector)) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var i, candidate, candidateTabindex;\n  for (i = 0; i < candidates.length; i++) {\n    candidate = candidates[i];\n\n    if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;\n\n    candidateTabindex = getTabindex(candidate);\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(sortOrderedTabbables)\n    .map(function(a) { return a.node })\n    .concat(regularTabbables);\n\n  return tabbableNodes;\n}\n\ntabbable.isTabbable = isTabbable;\ntabbable.isFocusable = isFocusable;\n\nfunction isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {\n  if (\n    !isNodeMatchingSelectorFocusable(node, untouchabilityChecker)\n    || isNonTabbableRadio(node)\n    || getTabindex(node) < 0\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction isTabbable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, candidateSelector) === false) return false;\n  return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);\n}\n\nfunction isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {\n  untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);\n  if (\n    node.disabled\n    || isHiddenInput(node)\n    || untouchabilityChecker.isUntouchable(node)\n  ) {\n    return false;\n  }\n  return true;\n}\n\nvar focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');\nfunction isFocusable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, focusableCandidateSelector) === false) return false;\n  return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);\n}\n\nfunction getTabindex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n  if (!isNaN(tabindexAttr)) return tabindexAttr;\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\n\nfunction sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n}\n\n// Array.prototype.find not available in IE.\nfunction find(list, predicate) {\n  for (var i = 0, length = list.length; i < length; i++) {\n    if (predicate(list[i])) return list[i];\n  }\n}\n\nfunction isContentEditable(node) {\n  return node.contentEditable === 'true';\n}\n\nfunction isInput(node) {\n  return node.tagName === 'INPUT';\n}\n\nfunction isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n}\n\nfunction isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n}\n\nfunction isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n}\n\nfunction getCheckedRadio(nodes) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked) {\n      return nodes[i];\n    }\n  }\n}\n\nfunction isTabbableRadio(node) {\n  if (!node.name) return true;\n  // This won't account for the edge case where you have radio groups with the same\n  // in separate forms on the same page.\n  var radioSet = node.ownerDocument.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\n  var checked = getCheckedRadio(radioSet);\n  return !checked || checked === node;\n}\n\n// An element is \"untouchable\" if *it or one of its ancestors* has\n// `visibility: hidden` or `display: none`.\nfunction UntouchabilityChecker(elementDocument) {\n  this.doc = elementDocument;\n  // Node cache must be refreshed on every check, in case\n  // the content of the element has changed. The cache contains tuples\n  // mapping nodes to their boolean result.\n  this.cache = [];\n}\n\n// getComputedStyle accurately reflects `visibility: hidden` of ancestors\n// but not `display: none`, so we need to recursively check parents.\nUntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {\n  if (node.nodeType !== Node.ELEMENT_NODE) return false;\n\n    // Search for a cached result.\n    var cached = find(this.cache, function(item) {\n      return item === node;\n    });\n    if (cached) return cached[1];\n\n    nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);\n\n    var result = false;\n\n    if (nodeComputedStyle.display === 'none') {\n      result = true;\n    } else if (node.parentNode) {\n      result = this.hasDisplayNone(node.parentNode);\n    }\n\n    this.cache.push([node, result]);\n\n    return result;\n}\n\nUntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {\n  if (node === this.doc.documentElement) return false;\n  var computedStyle = this.doc.defaultView.getComputedStyle(node);\n  if (this.hasDisplayNone(node, computedStyle)) return true;\n  return computedStyle.visibility === 'hidden';\n}\n\nmodule.exports = tabbable;\n","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar virtual = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar keyboard = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar mousewheel = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar navigation = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar pagination = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar scrollbar = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar parallax = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar zoom = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar lazy = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar controller = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar a11y$1 = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar history = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar hashNavigation = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar autoplay = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar effectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar effectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar thumbs = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  \n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport { Swiper, virtual as Virtual, keyboard as Keyboard, mousewheel as Mousewheel, navigation as Navigation, pagination as Pagination, scrollbar as Scrollbar, parallax as Parallax, zoom as Zoom, lazy as Lazy, controller as Controller, a11y$1 as A11y, history as History, hashNavigation as HashNavigation, autoplay as Autoplay, effectFade as EffectFade, effectCube as EffectCube, effectFlip as EffectFlip, effectCoverflow as EffectCoverflow, thumbs as Thumbs };\n","import {\n  Swiper, Navigation, Pagination, A11y, Controller, Thumbs,\n} from 'swiper/dist/js/swiper.esm';\n\nSwiper.use([Navigation, Pagination, A11y, Controller, Thumbs]);\n\nexport default class CustomSwiper {\n  constructor(selector, settings) {\n    return new Swiper(selector, settings);\n  }\n}\n","import LazyLoad from 'vanilla-lazyload/dist/lazyload';\n\nexport default new class LazyLoadInit {\n  constructor() {\n    this.lazySelector = 'js-lazy-load';\n    this.finishSelector = 'lazy-finish';\n\n    this.handler();\n  }\n\n  handler() {\n    document.addEventListener('DOMContentLoaded', () => {\n      this.init();\n    });\n  }\n\n  init() {\n    const lazyElms = document.querySelector(`.${this.lazySelector}`);\n\n    if (!lazyElms) return;\n\n    this.initLazyLoad();\n  }\n\n  update() {\n    const lazyElms = document.querySelector(`.${this.lazySelector}`);\n    if (!lazyElms) return;\n\n    this.initLazyLoad();\n    this.myLazyLoad.update();\n  }\n\n  initLazyLoad() {\n    if (this.myLazyLoad) return;\n\n    this.myLazyLoad = new LazyLoad({\n      elements_selector: `.${this.lazySelector}`,\n      class_loaded: this.finishSelector,\n      callback_loaded: (node) => {\n        const { parentElement } = node;\n\n        if (!parentElement.tagName === 'PICTURE') return;\n\n        parentElement.classList.add(this.finishSelector);\n      },\n    });\n  }\n\n  loadAll() {\n    const lazyElms = document.querySelector(`.${this.lazySelector}`);\n\n    if (!lazyElms) return;\n\n    this.myLazyLoad.loadAll();\n  }\n}();\n","/**\n * @author  Andrey Kharanenka, a.khoronenko@lovata.com, LOVATA Group\n */\nexport default class ShopaholicRemoveWishList {\n  constructor() {\n    this.sDefaultButtonClass = '_shopaholic-remove-wish-list-button';\n    this.sButtonSelector = `.${this.sDefaultButtonClass}`;\n\n    this.sDefaultWrapperClass = '_shopaholic-product-wrapper';\n    this.sWrapperSelector = `.${this.sDefaultWrapperClass}`;\n    this.sAttributeName = 'data-product-id';\n\n    this.sComponentMethod = 'ProductList::onRemoveFromWishList';\n    this.obAjaxRequestCallback = null;\n  }\n\n  /**\n   * Init event handlers\n   */\n  init() {\n    $(document).on('click', this.sButtonSelector, (obEvent) => {\n      const obButton = $(obEvent.currentTarget),\n        iProductID = this.getProductID(obButton);\n\n      this.sendAjaxRequest(iProductID, obButton);\n    });\n  }\n\n  /**\n   * Remove product from wish list\n   * @param {int} iProductID\n   * @param obButton\n   */\n  sendAjaxRequest(iProductID, obButton) {\n    let obRequestData = {\n      'data': {'product_id': iProductID}\n    };\n\n    if (this.obAjaxRequestCallback !== null) {\n      obRequestData = this.obAjaxRequestCallback(obRequestData, obButton);\n    }\n\n    $.request(this.sComponentMethod, obRequestData);\n  }\n\n  /**\n   * Get product ID from attribute\n   * @param obButton\n   * @returns {int}\n   */\n  getProductID(obButton) {\n    const obProduct = obButton.parents(this.sWrapperSelector),\n      iProductID = obProduct.attr(this.sAttributeName);\n\n    return iProductID;\n  }\n\n  /**\n   * Set ajax request callback\n   *\n   * @param {function} obCallback\n   * @returns {ShopaholicRemoveWishList}\n   */\n  setAjaxRequestCallback(obCallback) {\n    this.obAjaxRequestCallback = obCallback;\n\n    return this;\n  }\n\n  /**\n   * Redeclare default selector of \"Remove from wish list\" button\n   * Default value is ._shopaholic-remove-wish-list-button\n   *\n   * @param {string} sSelector\n   * @returns {ShopaholicRemoveWishList}\n   */\n  setButtonSelector(sSelector) {\n    this.sButtonSelector = sSelector;\n\n    return this;\n  }\n}","/**\n * @author  Andrey Kharanenka, <a.khoronenko@lovata.com>, LOVATA Group,\n * @author  Uladzimir Ambrazhey, <v.ambrazhey@lovata.com>, LOVATA Group\n */\nexport default class ShopaholicCartPosition {\n  constructor(obButton) {\n    this.sDefaultWrapperClass = '_shopaholic-product-wrapper';\n    this.sWrapperSelector = `.${this.sDefaultWrapperClass}`;\n\n    this.sPositionIDAttr = 'data-position-id';\n    this.sOfferIDAttr = 'offer_id';\n    this.sQuantityAttr = 'quantity';\n\n    this.obButton = obButton;\n    this.obProductCart = obButton.closest(`${this.sWrapperSelector}`);\n\n    this.iPositionID = null;\n    this.iOfferID = null;\n    this.iQuantity = 1;\n    this.obProperty = {};\n    this.iRadix = 10;\n\n    this.eventName = 'shopaholic.cart.position.extend';\n    if (!this.obProductCart) {\n      throw new Error('Product wrapper is empty. It mast contain product card node');\n    }\n\n    this.referenceType = 'radio';\n\n    this.initOfferID();\n    this.initQuantity();\n    this.initCartPositionID();\n  }\n\n  /**\n   * Get cart position node\n   * @returns {*}\n   */\n  getNode() {\n    return this.obProductCart;\n  }\n\n  /**\n   * Get cart position data\n   * @returns {{quantity: number, id: null, offer_id: null}}\n   */\n  getData() {\n    let obData = {\n      id: this.iPositionID,\n      offer_id: this.iOfferID,\n      quantity: this.iQuantity,\n      property: this.obProperty\n    };\n    document.dispatchEvent(this.createCustomEvent(obData));\n\n    return obData;\n  }\n\n  /**\n   * Get position ID\n   * @returns {int}\n   */\n  getPositionID() {\n    return this.iPositionID;\n  }\n\n  /**\n   * Get quantity\n   * @returns {int}\n   */\n  getQuantity() {\n    return this.iQuantity;\n  }\n\n  /**\n   * Get quantity input node\n   * @returns {node}\n   */\n  getQuantityInput() {\n    return this.obProductCart.querySelector(`[name=${this.sQuantityAttr}]`);\n  }\n\n  /**\n   * Get offer ID from input\n   */\n  initOfferID() {\n    const obOfferIDNodeCollection = this.obProductCart.querySelectorAll(`[name=${this.sOfferIDAttr}]`);\n    if (!obOfferIDNodeCollection || obOfferIDNodeCollection.length === 0) {\n      return;\n    }\n\n    const isRadio = this.getOfferIDInputType(obOfferIDNodeCollection);\n    if (isRadio) {\n      const obOfferIDNode = [...obOfferIDNodeCollection].filter(node => node.checked);\n\n      this.iOfferID = parseInt(obOfferIDNode[0].value, this.iRadix);\n    } else {\n      this.iOfferID = parseInt(obOfferIDNodeCollection[0].value, this.iRadix);\n    }\n  }\n\n  /**\n   * Detect type of input with offer id\n   */\n  getOfferIDInputType(obOfferIDNodeCollection) {\n    const firstNode = obOfferIDNodeCollection[0];\n    const { type: sType } = firstNode;\n\n    return sType === this.referenceType;\n  }\n\n  /**\n   * Get offer quantity from cart object\n   */\n  initQuantity() {\n    const obQuantityInput = this.getQuantityInput();\n    if (!obQuantityInput) {\n      return;\n    }\n\n    this.iQuantity = parseInt(obQuantityInput.value, this.iRadix);\n  }\n\n  /**\n   * Get offer quantity from cart object\n   */\n  initCartPositionID() {\n    const sValue = this.obProductCart.getAttribute(`${this.sPositionIDAttr}`);\n    if (!sValue) {\n      return;\n    }\n\n    this.iPositionID = parseInt(sValue, this.iRadix);\n  }\n\n  /**\n   * Create event\n   * @param options\n   * @returns {CustomEvent<any>}\n   */\n  createCustomEvent(options) {\n    const event = new CustomEvent(this.eventName, {\n      bubbles: true,\n      cancelable: true,\n      detail: options,\n    });\n\n    return event;\n  }\n}\n","import Swiper from '../../common/custom-swiper/custom-swiper';\nimport LazyLoad from '../../../js/lazy-load';\n\nexport default new class RelativeSlider {\n  constructor() {\n    this.sectionSelector = 'relative-product-slider';\n    this.sliderContainerSelector = 'relative-product-slider__container';\n    this.nextElBtnSelector = 'relative-product-slider__nav_next';\n    this.prevElBtnSelector = 'relative-product-slider__nav_prev';\n    this.paginationSelector = 'relative-product-slider__pagination';\n\n    this.handler();\n  }\n\n  handler() {\n    const slider = document.querySelector(`.${this.sliderContainerSelector}`);\n\n    if (!slider) return;\n\n    document.addEventListener('DOMContentLoaded', () => {\n      this.init();\n    });\n  }\n\n  init() {\n    const sliderList = document.querySelectorAll(`.${this.sliderContainerSelector}`);\n\n    [...sliderList].forEach(el => this.initSlider(el));\n  }\n\n  initSlider(el) {\n    const wrapper = el.closest(`.${this.sectionSelector}`);\n    const nextEl = wrapper.querySelector(`.${this.nextElBtnSelector}`);\n    const prevEl = wrapper.querySelector(`.${this.prevElBtnSelector}`);\n    const pagination = wrapper.querySelector(`.${this.paginationSelector}`);\n\n    this.RelativeSlider = new Swiper(el, {\n      slidesPerView: 2,\n      spaceBetween: 15,\n      breakpointsInverse: true,\n      watchOverflow: true,\n      watchSlidesVisibility: true,\n      watchSlidesProgress: true,\n      observer: true,\n      navigation: {\n        nextEl,\n        prevEl,\n        disabledClass: 'relative-product-slider__nav_disable',\n        hiddenClass: 'relative-product-slider__nav_hidden',\n      },\n      pagination: {\n        el: pagination,\n        type: 'fraction',\n        lockClass: 'relative-product-slider__pagination_disable',\n      },\n      loop: false,\n      breakpoints: {\n        769: {\n          slidesPerView: 3,\n          spaceBetween: 45,\n          loopedSlides: 8,\n        },\n      },\n      on: {\n        init: () => {\n          LazyLoad.update();\n        },\n      },\n    });\n  }\n}();\n","import ShopaholicCart from \"@lovata/shopaholic-cart/shopaholic-cart\";\n\n/**\n * @author  Uladzimir Ambrazhey, <v.ambrazhey@lovata.com>, LOVATA Group\n * @author  Andrey Kharanenka, a.khoronenko@lovata.com, LOVATA Group\n */\nexport default class ShopaholicCartShippingType {\n  constructor() {\n    this.sDefaultInputName = 'shipping_type_id';\n\n    this.obAjaxRequestCallback = null;\n    this.iRadix = 10;\n\n    this.sComponentMethod = 'Cart::onSetShippingType';\n\n    ShopaholicCart.instance();\n  }\n\n  /**\n  * Init event handlers\n  */\n  init() {\n    $(document).on('change', `[name=\"${this.sDefaultInputName}\"]`, (obEvent) => {\n\n      const {currentTarget: obInput} = obEvent;\n      this.sendAjaxRequest(obInput);\n    });\n  }\n\n  /**\n   * Send ajax request and update prices with new shipping-type-id\n   */\n  sendAjaxRequest(obInput) {\n\n    const iShippingTypeID = this.getShippingTypeID();\n\n    let obRequestData = {\n      data: {\n        'shipping_type_id': iShippingTypeID,\n      },\n      complete: ({responseJSON}) => {\n        this.completeCallback(responseJSON);\n      },\n    };\n\n    if (this.obAjaxRequestCallback !== null) {\n      obRequestData = this.obAjaxRequestCallback(obRequestData, obInput);\n    }\n\n    $.request(this.sComponentMethod, obRequestData);\n  }\n\n  /**\n   * Get active shipping type\n   * @returns {null|number}\n   */\n  getShippingTypeID() {\n    let iShippingTypeID = null;\n    const obInputList = document.querySelectorAll(`[name=${this.sDefaultInputName}]`);\n    if (!obInputList || obInputList.length === 0) {\n      return iShippingTypeID;\n    }\n\n    const isRadio = this.getInputType(obInputList);\n    if (isRadio) {\n      const obInputNode = [...obInputList].filter(node => node.checked);\n\n      iShippingTypeID = parseInt(obInputNode[0].value, this.iRadix);\n    } else {\n      iShippingTypeID = parseInt(obInputList[0].value, this.iRadix);\n    }\n\n    return  iShippingTypeID;\n  }\n\n  /**\n   * Detect type of input with offer id\n   */\n  getInputType(obInputList) {\n    const firstNode = obInputList[0];\n    const {type: sType} = firstNode;\n\n    return sType === 'radio';\n  }\n\n  /**\n   * Update cart data in ShopaholicCart object\n   */\n  completeCallback(obResponse) {\n    const {data: obCartData} = obResponse;\n\n    ShopaholicCart.instance().updateCartData(obCartData);\n  }\n\n  /**\n   * Set ajax request callback\n   *\n   * @param {function} obCallback\n   * @returns {ShopaholicCartShippingType}\n   */\n  setAjaxRequestCallback(obCallback) {\n    this.obAjaxRequestCallback = obCallback;\n\n    return this;\n  }\n}\n","import ShopaholicCartPosition from \"@lovata/shopaholic-cart/shopaholic-cart-position\";\nimport ShopaholicCart from \"@lovata/shopaholic-cart/shopaholic-cart\";\nimport ShopaholicCartShippingType from \"@lovata/shopaholic-cart/shopaholic-cart-shipping-type\";\n\n/**\n * @author  Uladzimir Ambrazhey, <v.ambrazhey@lovata.com>, LOVATA Group\n * @author  Andrey Kharanenka, a.khoronenko@lovata.com, LOVATA Group\n */\nexport default class ShopaholicCartAdd {\n  constructor() {\n    this.sDefaultButtonClass = '_shopaholic-cart-add';\n\n    this.obAjaxRequestCallback = null;\n\n    this.sAddComponentMethod = 'Cart::onAdd';\n    this.sUpdateComponentMethod = 'Cart::onUpdate';\n\n    ShopaholicCart.instance();\n  }\n\n  /**\n  * Init event handlers\n  */\n  init() {\n    $(document).on('click', `.${this.sDefaultButtonClass}`, (obEvent) => {\n      obEvent.preventDefault();\n\n      const {currentTarget: obButton} = obEvent;\n      if (obButton.hasAttribute('disabled')) {\n        return;\n      }\n\n      this.sendAjaxRequest(obButton);\n    });\n  }\n\n  /**\n   * Add offer to cart\n   * @param {node} obButton\n   * @param {boolean} bForceAddMethod Sets enforced method `this.sAddComponentMethod`\n   */\n\n  sendAjaxRequest(obButton, bForceAddMethod = false) {\n    if (!obButton) {\n      throw new Error('Button node is empty.');\n    }\n\n    obButton.setAttribute('disabled', 'disabled');\n    const obCartPosition = new ShopaholicCartPosition(obButton);\n    let obPositionData = obCartPosition.getData();\n    const iOfferID = obPositionData.offer_id;\n    const obShippingType = new ShopaholicCartShippingType();\n    const obOfferProperty = obPositionData.property;\n    const iCartQuantity = ShopaholicCart.instance().getOfferQuantity(iOfferID, obOfferProperty);\n\n    obPositionData.quantity += iCartQuantity;\n\n    let obRequestData = {\n      data: {\n        cart: [obPositionData],\n        'shipping_type_id': obShippingType.getShippingTypeID()\n      },\n      complete: ({responseJSON}) => {\n        this.completeCallback(responseJSON, obButton);\n      },\n    };\n\n    if (this.obAjaxRequestCallback !== null) {\n      obRequestData = this.obAjaxRequestCallback(obRequestData, obButton);\n    }\n\n    const ajaxHandler = iCartQuantity >= 1 && !bForceAddMethod ? this.sUpdateComponentMethod : this.sAddComponentMethod;\n\n    $.request(ajaxHandler, obRequestData);\n  }\n\n  /**\n   * Remove disabled attribute from button\n   * Update cart data in ShopaholicCart object\n   */\n  completeCallback(obResponse, obButton) {\n    const {data: obCartData} = obResponse;\n\n    ShopaholicCart.instance().updateCartData(obCartData);\n\n    if (obButton) {\n      obButton.removeAttribute('disabled');\n    }\n  }\n\n  /**\n   * Set ajax request callback\n   *\n   * @param {function} obCallback\n   * @returns {ShopaholicCartAdd}\n   */\n  setAjaxRequestCallback(obCallback) {\n    this.obAjaxRequestCallback = obCallback;\n\n    return this;\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","export default new class ReviewList {\n  constructor() {\n    this.sButtonClass = 'review-list__more';\n    this.sListWrapper = 'review-list';\n    this.preloaderSelector = 'review-list__preloader';\n\n    this.init();\n  }\n\n  init() {\n    $(document).on('click', `.${this.sButtonClass}`, (obEvent) => {\n      const obButton = $(obEvent.currentTarget);\n      const iPage = parseInt(obButton.attr('data-page'), 10);\n      const iNextPage = iPage + 1;\n      const iMaxPage = parseInt(obButton.attr('data-max-page'), 10);\n\n      this.sendAjax(iNextPage);\n\n      if (iNextPage >= iMaxPage) {\n        obButton.remove();\n      } else {\n        obButton.attr('data-page', iNextPage);\n      }\n    });\n  }\n\n  sendAjax(iNextPage) {\n    $.request('ProductData::onAjaxRequest', {\n      data: { page: iNextPage },\n      update: { 'content/review/review-list/review-list-ajax': `@.${this.sListWrapper}` },\n      loading: `.${this.preloaderSelector}`,\n    });\n  }\n}();\n","import Helper from '@lovata/popup-helper';\n\nexport default new class ReviewModal {\n  constructor() {\n    this.drawerOpenNavSelector = 'review-add_visible';\n    this.drawerNavSelector = 'review-add';\n    this.drawerContainerSelector = 'review-add__container';\n    this.modalContentWrapperSelector = 'review-add__wrapper';\n    this.drawerBtnSelector = 'js-review-modal';\n    this.drawerCloseBtnSelector = 'review-add__close-btn';\n    this.duplicateCloseSelector = 'review-form__close';\n    this.linkSelector = 'rating__review-count-wrap';\n    this.submitSelector = 'review-form__submit';\n    this.formSelector = 'review-form';\n    this.invalidSelector = '_invalid';\n\n    this.labelSelector = 'review-form__label';\n    this.preHoverLabelSelector = 'review-form__label_pre-hover';\n    this.afterHoverLabelSelector = 'review-form__label_after-hover';\n    this.preCheckedLabelSelector = 'review-form__label_pre-checked';\n    this.inputSelector = 'review-form__input';\n\n    this.tooltipSelector = 'review-form__tooltip';\n    this.tooltipVisibleSelector = 'review-form__tooltip_visible';\n\n    this.preLoaderSelector = 'review-add__preloader';\n\n    this.scrollDuration = 400;\n    this.messageClearDelay = 2000;\n\n    this.isLoad = false;\n\n    this.handler();\n    this.chooseRating();\n    this.scrollTo();\n  }\n\n  handler() {\n    $(document).ready(() => {\n      const btn = document.querySelector(`.${this.drawerCloseBtnSelector}`);\n      const modal = document.querySelector(`.${this.drawerNavSelector}`);\n\n      $(document).on('click', `.${this.drawerBtnSelector}`, (e) => {\n        if (!this.isLoad) {\n          this.loadPopupContent();\n        }\n\n        this.togglePopup(e, modal);\n      });\n\n      $(document).on('click', `.${this.duplicateCloseSelector}`, () => {\n        btn.click();\n      });\n\n      $(document).on('click', `.${this.drawerNavSelector}`, (event) => {\n        if (event.target.matches('.review-add')) {\n          document.querySelector('.overlay').click();\n        }\n      });\n\n      $(document).on('click', `.${this.submitSelector}`, () => {\n        clearTimeout(this.timer);\n        this.hideTooltip();\n        setTimeout(() => {\n          const form = document.querySelector(`.${this.formSelector}`);\n          const isValid = !form.classList.contains(this.invalidSelector);\n\n          if (!isValid) return;\n\n          $(form).request('MakeReview::onCreate', {\n            complete: (res) => {\n              this.completeHandler(res);\n            },\n          });\n        }, 0);\n      });\n\n      $(window).on('load', () => {\n        if (this.isLoad) return;\n\n        this.loadPopupContent();\n      });\n\n      this.setRating();\n    });\n  }\n\n  completeHandler(response) {\n    const { responseJSON } = response;\n\n    if (!responseJSON) return;\n\n    const { status, message } = responseJSON;\n\n    if (!status) {\n      this.showTooltip(message);\n    } else {\n      $.request('onAjax', {\n        update: {\n          'content/review/review-add/review-add-success': `.${this.drawerContainerSelector}`,\n        },\n        loading: `.${this.preLoaderSelector}`,\n      });\n    }\n  }\n\n  showTooltip(message) {\n    const tooltip = $(`.${this.tooltipSelector}`);\n\n    tooltip.addClass(this.tooltipVisibleSelector).text(message);\n\n    this.timer = setTimeout(() => {\n      this.hideTooltip();\n    }, this.messageClearDelay);\n  }\n\n  hideTooltip() {\n    const tooltip = $(`.${this.tooltipSelector}`);\n    tooltip.removeClass(this.tooltipVisibleSelector).text('');\n  }\n\n  loadPopupContent() {\n    $.request('onAjax', {\n      update: {\n        'form/review-form/review-form': `.${this.modalContentWrapperSelector}`,\n      },\n      success: () => {\n        this.isLoad = true;\n      },\n    });\n  }\n\n  togglePopup(eventObject, popup) {\n    eventObject.preventDefault();\n\n    const { currentTarget } = eventObject;\n    const isOpen = $(popup).hasClass(this.drawerOpenNavSelector);\n\n    Helper.setBodyScrollState(isOpen);\n    Helper.overlayHandler(!isOpen, currentTarget, popup);\n\n    $(popup).toggleClass(this.drawerOpenNavSelector);\n    Helper.focusTrapManager(!isOpen, popup);\n  }\n\n  scrollTo() {\n    $(document).on('click', `.${this.linkSelector}`, (e) => {\n      e.preventDefault();\n\n      const { currentTarget } = e;\n      const id = $(currentTarget).attr('href');\n\n      if (!id.length) return;\n\n      const target = $(id);\n\n      if (!target.length) return;\n\n      const offsetTop = target.offset().top;\n      const correctionFactor = target\n        .parent()\n        .height();\n      const scrollDistance = offsetTop - correctionFactor;\n\n      if (!offsetTop) return;\n\n      $('html, body').animate({ scrollTop: scrollDistance }, this.scrollDuration);\n    });\n  }\n\n  setRating() {\n    $(document).on('mouseenter', `.${this.labelSelector}`, ({ currentTarget }) => {\n      this.indicateInterval(currentTarget);\n    });\n\n    $(document).on('mouseleave', `.${this.labelSelector}`, () => {\n      this.clearRating();\n    });\n\n    $(document).on('click', `.${this.inputSelector}`, () => {\n      this.chooseRating();\n    });\n  }\n\n  clearRating() {\n    $(`.${this.labelSelector}`)\n      .removeClass(this.preHoverLabelSelector)\n      .removeClass(this.afterHoverLabelSelector);\n  }\n\n  indicateInterval(node) {\n    this.clearRating();\n    const prevElm = $(node).prevAll(`.${this.labelSelector}`);\n    const nextElm = $(node).nextAll(`.${this.labelSelector}`);\n\n    $(node).addClass(this.preHoverLabelSelector);\n    prevElm.addClass(this.preHoverLabelSelector);\n    nextElm.addClass(this.afterHoverLabelSelector);\n  }\n\n  chooseRating() {\n    const radioCollection = $(`.${this.inputSelector}`);\n\n    $(`.${this.labelSelector}`).removeClass(this.preCheckedLabelSelector);\n\n    const checked = [...radioCollection].filter(el => $(el).prop('checked'));\n    if (!checked.length) return;\n\n    const id = checked[0].getAttribute('id');\n    const label = $(`[for=\"${id}\"]`);\n    const prevElm = label.prevAll(`.${this.labelSelector}`);\n\n    prevElm.addClass(this.preCheckedLabelSelector);\n    label.addClass(this.preCheckedLabelSelector);\n  }\n}();\n","import ShopaholicCartAdd from '@lovata/shopaholic-cart/shopaholic-cart-add';\n\nexport default new class ProductInfo {\n  constructor() {\n    this.detailSelector = 'product-info__detail-btn';\n    this.detailOpenSelector = 'product-info__detail-btn_open';\n    this.textSelector = 'product-info__detail-text';\n    this.textHiddenSelector = 'product-info__detail-text_visually-hidden';\n    this.sMiniCartWrapper = '_shopaholic-cart-mini-wrapper';\n    this.preLoaderClass = 'product-info__preloader';\n    this.wrapperSelector = '_shopaholic-product-wrapper';\n    this.tooltipSelector = 'product-info__tooltip';\n    this.tooltipVisibleSelector = 'product-info__tooltip_visible';\n\n    this.obShopaholicCartAdd = new ShopaholicCartAdd();\n\n    this.handler();\n    this.initAddCart();\n  }\n\n  handler() {\n    $(document).on('click', `.${this.detailSelector}`, ({ target }) => {\n      const text = $(target).siblings(`.${this.textSelector}`);\n\n      if (!text.length) return;\n\n      $(target).toggleClass(this.detailOpenSelector);\n      text.toggleClass(this.textHiddenSelector);\n    });\n  }\n\n  initAddCart() {\n    this.obShopaholicCartAdd.setAjaxRequestCallback((obRequestData, obButton) => {\n      const wrapper = obButton.closest(`.${this.wrapperSelector}`);\n      const tooltip = wrapper.querySelector(`.${this.tooltipSelector}`);\n      if (tooltip) {\n        clearTimeout(this.timer);\n        tooltip.classList.remove(this.tooltipVisibleSelector);\n      }\n      /* eslint-disable  no-param-reassign */\n      obRequestData.update = { 'product/cart/cart-mini/cart-info/cart-info': `.${this.sMiniCartWrapper}` };\n      obRequestData.loading = `.${this.preLoaderClass}`;\n      obRequestData.complete = ({ responseJSON }) => {\n        this.obShopaholicCartAdd.completeCallback(responseJSON, obButton);\n        if (tooltip) {\n          tooltip.classList.add(this.tooltipVisibleSelector);\n          this.timer = setTimeout(() => {\n            tooltip.classList.remove(this.tooltipVisibleSelector);\n          }, 2000);\n        }\n      };\n      /* eslint-enable */\n\n      return obRequestData;\n    }).init();\n  }\n}();\n","var tabbable = require('tabbable');\nvar xtend = require('xtend');\n\nvar activeFocusTraps = (function() {\n  var trapQueue = [];\n  return {\n    activateTrap: function(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap: function(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n})();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    activeFocusTraps.deactivateTrap(trap);\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    updateTabbableNodes();\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, true);\n    doc.addEventListener('touchstart', checkPointerDown, true);\n    doc.addEventListener('click', checkClick, true);\n    doc.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        \"You can't have a focus-trap without at least one focusable element\"\n      );\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n","import ShopaholicAddWishList from '@lovata/shopaholic-wish-list/shopaholic-add-wish-list';\nimport ShopaholicRemoveWishList from '@lovata/shopaholic-wish-list/shopaholic-remove-wish-list';\n\nexport default new class WishListAdd {\n  constructor() {\n    this.iconClass = '_favorite';\n    this.iconSelector = 'wish-list-add__icon';\n    this.sWishListInfoWrapper = 'userbar__item_wish-list';\n    this.isFavoriteSelector = 'wish-list-add_favorite';\n\n    if ($(`.${this.sWishListInfoWrapper}`).length === 0) {\n      return;\n    }\n\n    this.obAddHelper = new ShopaholicAddWishList();\n    this.obRemoveHelper = new ShopaholicRemoveWishList();\n\n    this.initAddHandler();\n    this.initRemoveHandler();\n  }\n\n  /* eslint-disable no-param-reassign */\n  initAddHandler() {\n    this.obAddHelper.setAjaxRequestCallback((obRequestData, obButton) => {\n      obRequestData.update = { 'product/wish-list/wish-list-info/wish-list-info': `.${this.sWishListInfoWrapper}` };\n      obRequestData.complete = () => {\n        obButton.removeClass(this.obAddHelper.sDefaultButtonClass);\n        obButton.addClass(this.obRemoveHelper.sDefaultButtonClass);\n        obButton.find(`.${this.iconSelector}`).addClass(this.iconClass);\n        obButton.addClass(this.isFavoriteSelector);\n      };\n\n      return obRequestData;\n    }).init();\n  }\n\n  initRemoveHandler() {\n    this.obRemoveHelper.setAjaxRequestCallback((obRequestData, obButton) => {\n      obRequestData.update = { 'product/wish-list/wish-list-info/wish-list-info': `.${this.sWishListInfoWrapper}` };\n      obRequestData.complete = () => {\n        obButton.removeClass(this.obRemoveHelper.sDefaultButtonClass);\n        obButton.addClass(this.obAddHelper.sDefaultButtonClass);\n        obButton.removeClass(this.isFavoriteSelector);\n        obButton.find(`.${this.iconSelector}`).removeClass(this.iconClass);\n      };\n\n      return obRequestData;\n    }).init();\n  }\n  /* eslint-enable */\n}();\n","/**\n * @author  Andrey Kharanenka, a.khoronenko@lovata.com, LOVATA Group\n */\nexport default class ShopaholicAddWishList {\n  constructor() {\n    this.sDefaultButtonClass = '_shopaholic-add-wish-list-button';\n    this.sButtonSelector = `.${this.sDefaultButtonClass}`;\n\n    this.sDefaultWrapperClass = '_shopaholic-product-wrapper';\n    this.sWrapperSelector = `.${this.sDefaultWrapperClass}`;\n    this.sAttributeName = 'data-product-id';\n\n    this.sComponentMethod = 'ProductList::onAddToWishList';\n    this.obAjaxRequestCallback = null;\n  }\n\n  /**\n   * Init event handlers\n   */\n  init() {\n    $(document).on('click', this.sButtonSelector, (obEvent) => {\n      const obButton = $(obEvent.currentTarget),\n        iProductID = this.getProductID(obButton);\n\n      this.sendAjaxRequest(iProductID, obButton);\n    });\n  }\n\n  /**\n   * Add product to wish list\n   * @param {int} iProductID\n   * @param obButton\n   */\n  sendAjaxRequest(iProductID, obButton) {\n    let obRequestData = {\n      'data': {'product_id': iProductID}\n    };\n\n    if (this.obAjaxRequestCallback !== null) {\n      obRequestData = this.obAjaxRequestCallback(obRequestData, obButton);\n    }\n\n    $.request(this.sComponentMethod, obRequestData);\n  }\n\n  /**\n   * Get product ID from attribute\n   * @param obButton\n   * @returns {int}\n   */\n  getProductID(obButton) {\n    const obProduct = obButton.parents(this.sWrapperSelector),\n      iProductID = obProduct.attr(this.sAttributeName);\n\n    return iProductID;\n  }\n\n  /**\n   * Set ajax request callback\n   *\n   * @param {function} obCallback\n   * @returns {ShopaholicAddWishList}\n   */\n  setAjaxRequestCallback(obCallback) {\n    this.obAjaxRequestCallback = obCallback;\n\n    return this;\n  }\n\n  /**\n   * Redeclare default selector of \"Add to wish list\" button\n   * Default value is ._shopaholic-add-wish-list-button\n   *\n   * @param {string} sSelector\n   * @returns {ShopaholicAddWishList}\n   */\n  setButtonSelector(sSelector) {\n    this.sButtonSelector = sSelector;\n\n    return this;\n  }\n}","/**\n * @author  Andrey Kharanenka, <a.khoronenko@lovata.com>, LOVATA Group,\n * @author  Uladzimir Ambrazhey, <v.ambrazhey@lovata.com>, LOVATA Group\n */\nimport ShopaholicCartPosition from \"@lovata/shopaholic-cart/shopaholic-cart-position\";\n\nexport default class ShopaholicCart {\n  constructor() {\n    /* Selectors */\n    this.sOfferItemType = 'Lovata\\\\Shopaholic\\\\Models\\\\Offer';\n\n    /* Params */\n    this.sGetDataHandler = 'Cart::onGetData';\n    this.iRadix = 10;\n\n    this.sNodeClass = '_shopaholic-cart';\n    this.sOldPriceClass = '_shopaholic-old-price';\n    this.sHideOldPriceClass = '_shopaholic-hide-old-price';\n    this.sGroupAttribute = 'data-group';\n    this.sFieldAttribute = 'data-field';\n\n    this.obCartData = null;\n  }\n\n  /**\n   * Init singleton object of ShopaholicCart\n   * @param {object} obRequestData\n   * @returns {ShopaholicCart}\n   */\n  static instance(obRequestData = null) {\n    if (window.ShopaholicCart === undefined) {\n      window.ShopaholicCart = new ShopaholicCart();\n      window.ShopaholicCart.init(obRequestData);\n    }\n\n    return window.ShopaholicCart;\n  }\n\n  /**\n   * Init cart data object if it is empty\n   */\n  init(obRequestData) {\n    if (this.obCartData !== null) {\n      return;\n    }\n\n    if (!obRequestData) {\n     let obRequestData = {};\n    }\n\n    obRequestData.complete = ({responseJSON}) => {\n      this.obCartData = responseJSON;\n    };\n\n    $.request(this.sGetDataHandler, obRequestData);\n  }\n\n  /**\n   * Update cart data object\n   * @param {object} obCartData\n   */\n  updateCartData(obCartData) {\n    this.obCartData = obCartData;\n\n    this.renderPriceFields();\n  }\n\n  /**\n   * Get offer quantity from cart object\n   * @param {int} iOfferID\n   * @param {object} obOfferProperty\n   */\n  getOfferQuantity(iOfferID, obOfferProperty) {\n    let iQuantity = 0;\n    const obCartPosition = this.findCartPositionByOfferID(iOfferID, this.sOfferItemType, obOfferProperty);\n\n    if (!!obCartPosition) {\n      iQuantity = obCartPosition.quantity;\n    }\n\n    return parseInt(iQuantity, this.iRadix);\n  }\n\n  /**\n   * Get field value from cart position object\n   * @param {int} iPositionID\n   * @param {string} sField\n   */\n  getOfferPositionField(iPositionID, sField) {\n    const obCartPosition = this.findCartPositionByID(iPositionID);\n    if (!!obCartPosition && !!obCartPosition[sField]) {\n      return obCartPosition[sField];\n    }\n\n    return null;\n  }\n\n  /**\n   * Get field value from object\n   * @param {string} sGroup\n   * @param {string} sField\n   */\n  getField(sGroup, sField) {\n    if (!!this.obCartData && !!this.obCartData[sGroup] && !!this.obCartData[sGroup][sField]) {\n      return this.obCartData[sGroup][sField];\n    }\n\n    return null;\n  }\n\n  /**\n   * Find cart position by item ID and type\n   * @param {int} iItemID\n   * @param {string} sItemType\n   * @param {object} obOfferProperty\n   */\n  findCartPositionByOfferID(iItemID, sItemType, obOfferProperty) {\n    iItemID = parseInt(iItemID, 10);\n    let obPosition = null;\n\n    if (!this.obCartData || !this.obCartData.position) {\n      return;\n    }\n\n    const obPositionList = this.obCartData.position;\n    const arCartPositionIDList = Object.keys(obPositionList);\n    for (let iKey of arCartPositionIDList) {\n      let obPositionItem = obPositionList[iKey];\n      if (obPositionItem.item_id != iItemID || obPositionItem.item_type != sItemType\n        || JSON.stringify(obPositionItem.property) != JSON.stringify(obOfferProperty)) {\n        continue;\n      }\n\n      obPosition = obPositionItem;\n      break;\n    }\n\n    return obPosition;\n  }\n\n  /**\n   * Find cart position by position ID\n   * @param {int} iPositionID\n   */\n  findCartPositionByID(iPositionID) {\n    iPositionID = parseInt(iPositionID, 10);\n    let obPosition = null;\n\n    if (!this.obCartData || !this.obCartData.position) {\n      return;\n    }\n\n    const obPositionList = this.obCartData.position;\n    if (!!obPositionList[iPositionID]) {\n      return obPositionList[iPositionID];\n    }\n\n    return obPosition;\n  }\n\n  /**\n   * Find price fields and update price values\n   */\n  renderPriceFields() {\n    const obNodeList = document.querySelectorAll(`.${this.sNodeClass}`);\n    if (!obNodeList || obNodeList.length === 0) {\n      return;\n    }\n\n    obNodeList.forEach((obPriceNode) => {\n      const sGroupOriginal = obPriceNode.getAttribute(this.sGroupAttribute);\n      const sGroup = !!sGroupOriginal ? sGroupOriginal.replace(/-/g, '_').toLowerCase() : sGroupOriginal;\n      const sFieldOriginal = obPriceNode.getAttribute(this.sFieldAttribute);\n      const sField = !!sFieldOriginal? sFieldOriginal.replace(/-/g, '_').toLowerCase() : sFieldOriginal;\n      let sNewValue = '';\n\n      if (sGroup === 'position') {\n        const obCartPosition = new ShopaholicCartPosition(obPriceNode);\n        const iPositionID = obCartPosition.getPositionID();\n        sNewValue = this.getOfferPositionField(iPositionID, sField);\n\n        obPriceNode.textContent = sNewValue;\n        this.processPositionOldPriceField(obCartPosition, sField, sFieldOriginal, sGroupOriginal);\n      } else {\n        sNewValue = this.getField(sGroup, sField);\n\n        obPriceNode.textContent = sNewValue;\n        this.processOldPriceField(sField, sFieldOriginal, sGroup, sGroupOriginal);\n      }\n\n    });\n  }\n\n  /**\n   * Process old price field of position\n   * @param {ShopaholicCartPosition} obCartPosition\n   * @param {string} sField\n   * @param {string} sFieldOriginal\n   * @param {string} sGroupOriginal\n   */\n  processPositionOldPriceField(obCartPosition, sField, sFieldOriginal, sGroupOriginal) {\n    if (sField.indexOf('old_price') < 0) {\n      return;\n    }\n\n    const iPositionID = obCartPosition.getPositionID();\n    const obCartNode = obCartPosition.getNode();\n    const obOldPriceNodeList = obCartNode.querySelectorAll(`.${this.sOldPriceClass}[data-group=\"${sGroupOriginal}\"][data-field=\"${sFieldOriginal}\"]`);\n    if (!obOldPriceNodeList || obOldPriceNodeList.length === 0) {\n      return;\n    }\n\n    const fDiscountPrice = this.getOfferPositionField(iPositionID, sField.replace(/old_price/g, 'discount_price') + '_value');\n\n    obOldPriceNodeList.forEach((obOldPriceNode) => {\n      if (fDiscountPrice > 0) {\n        obOldPriceNode.classList.remove(this.sHideOldPriceClass);\n      } else {\n        obOldPriceNode.classList.add(this.sHideOldPriceClass);\n      }\n    });\n  }\n\n  /**\n   * Process old price field\n   * @param {string} sField\n   * @param {string} sFieldOriginal\n   * @param {string} sGroup\n   * @param {string} sGroupOriginal\n   */\n  processOldPriceField(sField, sFieldOriginal, sGroup, sGroupOriginal) {\n    if (sField.indexOf('old_price') < 0) {\n      return;\n    }\n\n    const obOldPriceNodeList = document.querySelectorAll(`.${this.sOldPriceClass}[data-group=\"${sGroupOriginal}\"][data-field=\"${sFieldOriginal}\"]`);\n    if (!obOldPriceNodeList || obOldPriceNodeList.length === 0) {\n      return;\n    }\n\n    const fDiscountPrice = this.getField(sGroup, sField.replace(/old_price/g, 'discount_price') + '_value');\n\n    obOldPriceNodeList.forEach((obOldPriceNode) => {\n      if (fDiscountPrice > 0) {\n        obOldPriceNode.classList.remove(this.sHideOldPriceClass);\n      } else {\n        obOldPriceNode.classList.add(this.sHideOldPriceClass);\n      }\n    });\n  }\n}\n"],"sourceRoot":""}